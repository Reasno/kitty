// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package module

import (
	"github.com/go-kit/kit/log"
	"github.com/google/wire"
	"glab.tagtic.cn/ad_gains/kitty/pkg/config"
	"glab.tagtic.cn/ad_gains/kitty/pkg/contract"
	"glab.tagtic.cn/ad_gains/kitty/rule/service"
)

// Injectors from wire.go:

func injectModule(reader contract.ConfigReader, logger log.Logger) (*Module, func(), error) {
	client, cleanup, err := provideEtcdClient(reader)
	if err != nil {
		return nil, nil, err
	}
	repository, err := provideRepository(client, logger)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	serviceService := service.ProvideService(logger, repository)
	appName := config.ProvideAppName(reader)
	env := config.ProvideEnv(reader)
	histogram := provideHistogramMetrics(appName, env)
	endpoints := newEndpoints(serviceService, histogram, logger, appName, env)
	module := provideModule(repository, endpoints)
	return module, func() {
		cleanup()
	}, nil
}

// wire.go:

var serviceSet = wire.NewSet(
	provideEtcdClient,
	provideRepository, service.ProvideService,
)
