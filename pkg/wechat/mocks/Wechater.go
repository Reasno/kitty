// Code generated by mockery v2.3.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	wechat "glab.tagtic.cn/ad_gains/kitty/pkg/wechat"
)

// Wechater is an autogenerated mock type for the Wechater type
type Wechater struct {
	mock.Mock
}

// GetLoginResponse provides a mock function with given fields: ctx, code
func (_m *Wechater) GetLoginResponse(ctx context.Context, code string) (*wechat.WxLoginResult, error) {
	ret := _m.Called(ctx, code)

	var r0 *wechat.WxLoginResult
	if rf, ok := ret.Get(0).(func(context.Context, string) *wechat.WxLoginResult); ok {
		r0 = rf(ctx, code)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*wechat.WxLoginResult)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, code)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetUserInfoResult provides a mock function with given fields: ctx, wxLoginResult
func (_m *Wechater) GetUserInfoResult(ctx context.Context, wxLoginResult *wechat.WxLoginResult) (*wechat.WxUserInfoResult, error) {
	ret := _m.Called(ctx, wxLoginResult)

	var r0 *wechat.WxUserInfoResult
	if rf, ok := ret.Get(0).(func(context.Context, *wechat.WxLoginResult) *wechat.WxUserInfoResult); ok {
		r0 = rf(ctx, wxLoginResult)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*wechat.WxUserInfoResult)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *wechat.WxLoginResult) error); ok {
		r1 = rf(ctx, wxLoginResult)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
