syntax = "proto3";

package app.v1;

import "google/api/annotations.proto";
import "protoc-gen-validate/validate/validate.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "gogoproto/gogo.proto";

option go_package = "kitty";

option (options.openapiv2_swagger) = {
  info: {
    title: "A kitty app";
    version: "1.0";
  };
  base_path: "/app"
  security_definitions: {
    security: {
      key: "JWT",
      value: {
        type: TYPE_API_KEY
        in: IN_HEADER
        name: "Authorization"
      }
    }
  }
  security: {
    security_requirement: {
      key: "JWT";
      value: {};
    }
  }
  consumes: "application/json";
  produces: "application/json";
};

service App {
  // 用户从未登录状态注册或登录时调用。如果用户已登录，需要绑定手机号或微信号，请使用bind接口。
  rpc Login(UserLoginRequest) returns (UserInfoReply) {
    option (google.api.http) = {
      post: "/v1/login"
      body: "*"
    };
  }
  // 获得验证码
  rpc GetCode(GetCodeRequest) returns (GenericReply) {
    option (google.api.http) = {
      get: "/v1/code"
    };
  }
  // 获取任意用户信息，填0获取本人信息
  rpc GetInfo (UserInfoRequest) returns (UserInfoReply) {
    option (google.api.http) = {
      get: "/v1/info/{id}"
    };
  }
  // 更新个人信息
  rpc UpdateInfo (UserInfoUpdateRequest) returns (UserInfoReply) {
    option (google.api.http) = {
      post: "/v1/info"
      body: "*"
    };
  }
  // 用户已登录后，绑定额外的手机号或微信号
  rpc Bind (UserBindRequest) returns (UserInfoReply) {
    option (google.api.http) = {
      post: "/v1/bind"
      body: "*"
    };
  }
  // 针对已登录用户，取消绑定手机或微信登录方式
  rpc Unbind (UserUnbindRequest) returns (UserInfoReply) {
    option (google.api.http) = {
      post: "/v1/unbind"
      body: "*"
    };
  }
  // JWT Token续期，需要在每次升级系统或每次冷启动前调用，避免jwt中的信息与实际信息不一致
  rpc Refresh (UserRefreshRequest) returns (UserInfoReply) {
    option (google.api.http) = {
      post: "/v1/refresh"
      body: "*"
    };
  }
}

message UserBindRequest {
  string mobile = 1 [
    (validate.rules).string.pattern = "(^$|^[\\d]{11}$)",
    (options.openapiv2_field) = {pattern: "(^$|^[\\d]{11}$)"}
  ];
  string code = 2;
  string wechat = 3;
  // 如果有openid 就直接走openid
  string open_id = 4;
}

// UserRefreshRequest Token续期
message UserRefreshRequest {
  Device device = 4;
  string channel = 5 [
    (options.openapiv2_field) = {required: "true"},
    (validate.rules).string.min_len = 1
  ];
  string version_code = 6 [
    (options.openapiv2_field) = {required: "true"},
    (validate.rules).string.min_len = 1
  ];
}

message UserUnbindRequest {
  bool mobile = 1;
  bool wechat = 2;
}

message UserLoginRequest {
  string mobile = 1 [
    (validate.rules).string.pattern = "(^$|^[\\d]{11}$)",
    (options.openapiv2_field) = {pattern: "(^$|^[\\d]{11}$)"}
  ];
  string code = 2;
  // 手机发起微信登录的token，非openid
  string wechat = 3;

  Device device = 4;
  string channel = 5 [
    (options.openapiv2_field) = {required: "true"},
    (validate.rules).string.min_len = 1
  ];
  string version_code = 6 [
    (options.openapiv2_field) = {required: "true"},
    (validate.rules).string.min_len = 4
  ];
  string package_name = 7 [
    (options.openapiv2_field) = {required: "true"},
    (validate.rules).string.min_len = 1
  ];
}

message Device {
  enum OS {
    OS_UNKNOWN = 0;
    IOS = 1;
    ANDROID = 2;
  }
  string imei = 1;
  string idfa = 2;
  string android_id = 3;
  string suuid = 4;
  string mac = 5;
  OS os = 6;
  string oaid = 7;
}

message UserInfo {
  uint64 id = 1;
  string user_name = 2;
  string wechat = 3;
  string head_img = 4;
  Gender gender = 5;
  string birthday = 6;
  string token = 7;
}

message UserInfoReply {
  int32 code = 1 [(gogoproto.jsontag) = "code"];
  string message = 2;
  UserInfo data = 3;
}

enum Gender {
  GENDER_UNKNOWN = 0;
  GENDER_MALE = 1;
  GENDER_FEMALE = 2;
}

message GetCodeRequest {
  string mobile = 1 [
    (options.openapiv2_field) = {required: "true", pattern: "\\d{11}"},
    (validate.rules).string = {pattern: "\\d{11}"}
  ];
}

message UserInfoRequest {
  uint64 id = 1;
}

message UserInfoUpdateRequest {
  string user_name = 2 [
    (options.openapiv2_field).minimum = 2,
    (options.openapiv2_field).maximum = 10,
    (validate.rules).string.min_len = 2,
    (validate.rules).string.max_len = 10
  ];
  string head_img = 4 [
    (options.openapiv2_field) = {pattern: "^(|https?://.*)$"},
    (validate.rules).string = {pattern: "^(|https?://.*)$"}
  ];
  Gender gender = 5;
  string birthday = 6 [
    (options.openapiv2_field) = {pattern: "^(|\\d{4}-\\d{1,2}-\\d{1,2})$"},
    (validate.rules).string = {pattern: "^(|\\d{4}-\\d{1,2}-\\d{1,2})$"}
  ];
}

message EmptyRequest {
}

message GenericReply {
  int32 code = 1 [(gogoproto.jsontag) = "code"];
  string message = 2;
}
