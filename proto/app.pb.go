// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: app.proto

package kitty

import (
	context "context"
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Extra int32

const (
	Extra_UNKNOWN_EXTRA Extra = 0
	Extra_WECHAT_EXTRA  Extra = 1
	Extra_TAOBAO_EXTRA  Extra = 2
)

var Extra_name = map[int32]string{
	0: "UNKNOWN_EXTRA",
	1: "WECHAT_EXTRA",
	2: "TAOBAO_EXTRA",
}

var Extra_value = map[string]int32{
	"UNKNOWN_EXTRA": 0,
	"WECHAT_EXTRA":  1,
	"TAOBAO_EXTRA":  2,
}

func (x Extra) String() string {
	return proto.EnumName(Extra_name, int32(x))
}

func (Extra) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{0}
}

type Gender int32

const (
	Gender_GENDER_UNKNOWN Gender = 0
	Gender_GENDER_MALE    Gender = 1
	Gender_GENDER_FEMALE  Gender = 2
)

var Gender_name = map[int32]string{
	0: "GENDER_UNKNOWN",
	1: "GENDER_MALE",
	2: "GENDER_FEMALE",
}

var Gender_value = map[string]int32{
	"GENDER_UNKNOWN": 0,
	"GENDER_MALE":    1,
	"GENDER_FEMALE":  2,
}

func (x Gender) String() string {
	return proto.EnumName(Gender_name, int32(x))
}

func (Gender) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{1}
}

type Device_OS int32

const (
	Device_OS_UNKNOWN Device_OS = 0
	Device_IOS        Device_OS = 1
	Device_ANDROID    Device_OS = 2
)

var Device_OS_name = map[int32]string{
	0: "OS_UNKNOWN",
	1: "IOS",
	2: "ANDROID",
}

var Device_OS_value = map[string]int32{
	"OS_UNKNOWN": 0,
	"IOS":        1,
	"ANDROID":    2,
}

func (x Device_OS) String() string {
	return proto.EnumName(Device_OS_name, int32(x))
}

func (Device_OS) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{6, 0}
}

type UserBindRequest struct {
	// 手机号
	Mobile string `protobuf:"bytes,1,opt,name=mobile,proto3" json:"mobile,omitempty"`
	// 手机验证码（配合手机号使用）
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	// 微信官方下发的临时code码，非openId
	Wechat string `protobuf:"bytes,3,opt,name=wechat,proto3" json:"wechat,omitempty"`
	// 废弃，请使用wechat_extra.openId
	OpenId string `protobuf:"bytes,4,opt,name=openId,proto3" json:"openId,omitempty"` // Deprecated: Do not use.
	// 绑定淘宝
	TaobaoExtra *TaobaoExtra `protobuf:"bytes,5,opt,name=taobao_extra,json=taobaoExtra,proto3" json:"taobao_extra,omitempty"`
	// 如果有openId 就直接走openId，不用再填微信官方下发的临时code码
	WechatExtra *WechatExtra `protobuf:"bytes,6,opt,name=wechat_extra,json=wechatExtra,proto3" json:"wechat_extra,omitempty"`
	// 是否同步基础用户信息
	MergeInfo            bool     `protobuf:"varint,7,opt,name=mergeInfo,proto3" json:"mergeInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserBindRequest) Reset()         { *m = UserBindRequest{} }
func (m *UserBindRequest) String() string { return proto.CompactTextString(m) }
func (*UserBindRequest) ProtoMessage()    {}
func (*UserBindRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{0}
}
func (m *UserBindRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserBindRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserBindRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserBindRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserBindRequest.Merge(m, src)
}
func (m *UserBindRequest) XXX_Size() int {
	return m.Size()
}
func (m *UserBindRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserBindRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserBindRequest proto.InternalMessageInfo

func (m *UserBindRequest) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *UserBindRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *UserBindRequest) GetWechat() string {
	if m != nil {
		return m.Wechat
	}
	return ""
}

// Deprecated: Do not use.
func (m *UserBindRequest) GetOpenId() string {
	if m != nil {
		return m.OpenId
	}
	return ""
}

func (m *UserBindRequest) GetTaobaoExtra() *TaobaoExtra {
	if m != nil {
		return m.TaobaoExtra
	}
	return nil
}

func (m *UserBindRequest) GetWechatExtra() *WechatExtra {
	if m != nil {
		return m.WechatExtra
	}
	return nil
}

func (m *UserBindRequest) GetMergeInfo() bool {
	if m != nil {
		return m.MergeInfo
	}
	return false
}

type TaobaoExtra struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	OpenSid              string   `protobuf:"bytes,2,opt,name=open_sid,json=openSid,proto3" json:"open_sid,omitempty"`
	TopAccessToken       string   `protobuf:"bytes,3,opt,name=top_access_token,json=topAccessToken,proto3" json:"top_access_token,omitempty"`
	AvatarUrl            string   `protobuf:"bytes,4,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	HavanaSsoToken       string   `protobuf:"bytes,5,opt,name=havana_sso_token,json=havanaSsoToken,proto3" json:"havana_sso_token,omitempty"`
	Nick                 string   `protobuf:"bytes,6,opt,name=nick,proto3" json:"nick,omitempty"`
	OpenId               string   `protobuf:"bytes,7,opt,name=open_id,json=openId,proto3" json:"open_id,omitempty"`
	TopAuthCode          string   `protobuf:"bytes,8,opt,name=top_auth_code,json=topAuthCode,proto3" json:"top_auth_code,omitempty"`
	TopExpireTime        string   `protobuf:"bytes,9,opt,name=top_expire_time,json=topExpireTime,proto3" json:"top_expire_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaobaoExtra) Reset()         { *m = TaobaoExtra{} }
func (m *TaobaoExtra) String() string { return proto.CompactTextString(m) }
func (*TaobaoExtra) ProtoMessage()    {}
func (*TaobaoExtra) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{1}
}
func (m *TaobaoExtra) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TaobaoExtra) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TaobaoExtra.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TaobaoExtra) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaobaoExtra.Merge(m, src)
}
func (m *TaobaoExtra) XXX_Size() int {
	return m.Size()
}
func (m *TaobaoExtra) XXX_DiscardUnknown() {
	xxx_messageInfo_TaobaoExtra.DiscardUnknown(m)
}

var xxx_messageInfo_TaobaoExtra proto.InternalMessageInfo

func (m *TaobaoExtra) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *TaobaoExtra) GetOpenSid() string {
	if m != nil {
		return m.OpenSid
	}
	return ""
}

func (m *TaobaoExtra) GetTopAccessToken() string {
	if m != nil {
		return m.TopAccessToken
	}
	return ""
}

func (m *TaobaoExtra) GetAvatarUrl() string {
	if m != nil {
		return m.AvatarUrl
	}
	return ""
}

func (m *TaobaoExtra) GetHavanaSsoToken() string {
	if m != nil {
		return m.HavanaSsoToken
	}
	return ""
}

func (m *TaobaoExtra) GetNick() string {
	if m != nil {
		return m.Nick
	}
	return ""
}

func (m *TaobaoExtra) GetOpenId() string {
	if m != nil {
		return m.OpenId
	}
	return ""
}

func (m *TaobaoExtra) GetTopAuthCode() string {
	if m != nil {
		return m.TopAuthCode
	}
	return ""
}

func (m *TaobaoExtra) GetTopExpireTime() string {
	if m != nil {
		return m.TopExpireTime
	}
	return ""
}

type WechatExtra struct {
	AccessToken          string   `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	ExpiresIn            int64    `protobuf:"varint,2,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
	RefreshToken         string   `protobuf:"bytes,3,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	OpenId               string   `protobuf:"bytes,4,opt,name=open_id,json=openId,proto3" json:"open_id,omitempty"`
	Scope                string   `protobuf:"bytes,5,opt,name=scope,proto3" json:"scope,omitempty"`
	NickName             string   `protobuf:"bytes,6,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`
	Sex                  int32    `protobuf:"varint,7,opt,name=sex,proto3" json:"sex,omitempty"`
	Province             string   `protobuf:"bytes,8,opt,name=province,proto3" json:"province,omitempty"`
	City                 string   `protobuf:"bytes,9,opt,name=city,proto3" json:"city,omitempty"`
	Country              string   `protobuf:"bytes,10,opt,name=country,proto3" json:"country,omitempty"`
	Headimgurl           string   `protobuf:"bytes,11,opt,name=headimgurl,proto3" json:"headimgurl,omitempty"`
	Privilege            []string `protobuf:"bytes,12,rep,name=privilege,proto3" json:"privilege,omitempty"`
	Unionid              string   `protobuf:"bytes,13,opt,name=unionid,proto3" json:"unionid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WechatExtra) Reset()         { *m = WechatExtra{} }
func (m *WechatExtra) String() string { return proto.CompactTextString(m) }
func (*WechatExtra) ProtoMessage()    {}
func (*WechatExtra) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{2}
}
func (m *WechatExtra) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WechatExtra) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WechatExtra.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *WechatExtra) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WechatExtra.Merge(m, src)
}
func (m *WechatExtra) XXX_Size() int {
	return m.Size()
}
func (m *WechatExtra) XXX_DiscardUnknown() {
	xxx_messageInfo_WechatExtra.DiscardUnknown(m)
}

var xxx_messageInfo_WechatExtra proto.InternalMessageInfo

func (m *WechatExtra) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *WechatExtra) GetExpiresIn() int64 {
	if m != nil {
		return m.ExpiresIn
	}
	return 0
}

func (m *WechatExtra) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func (m *WechatExtra) GetOpenId() string {
	if m != nil {
		return m.OpenId
	}
	return ""
}

func (m *WechatExtra) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *WechatExtra) GetNickName() string {
	if m != nil {
		return m.NickName
	}
	return ""
}

func (m *WechatExtra) GetSex() int32 {
	if m != nil {
		return m.Sex
	}
	return 0
}

func (m *WechatExtra) GetProvince() string {
	if m != nil {
		return m.Province
	}
	return ""
}

func (m *WechatExtra) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *WechatExtra) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *WechatExtra) GetHeadimgurl() string {
	if m != nil {
		return m.Headimgurl
	}
	return ""
}

func (m *WechatExtra) GetPrivilege() []string {
	if m != nil {
		return m.Privilege
	}
	return nil
}

func (m *WechatExtra) GetUnionid() string {
	if m != nil {
		return m.Unionid
	}
	return ""
}

// Token续期
type UserRefreshRequest struct {
	Device *Device `protobuf:"bytes,4,opt,name=device,proto3" json:"device,omitempty"`
	// 渠道号
	Channel string `protobuf:"bytes,5,opt,name=channel,proto3" json:"channel,omitempty"`
	// 版本号
	VersionCode          string   `protobuf:"bytes,6,opt,name=version_code,json=versionCode,proto3" json:"version_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserRefreshRequest) Reset()         { *m = UserRefreshRequest{} }
func (m *UserRefreshRequest) String() string { return proto.CompactTextString(m) }
func (*UserRefreshRequest) ProtoMessage()    {}
func (*UserRefreshRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{3}
}
func (m *UserRefreshRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserRefreshRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserRefreshRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserRefreshRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRefreshRequest.Merge(m, src)
}
func (m *UserRefreshRequest) XXX_Size() int {
	return m.Size()
}
func (m *UserRefreshRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRefreshRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserRefreshRequest proto.InternalMessageInfo

func (m *UserRefreshRequest) GetDevice() *Device {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *UserRefreshRequest) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

func (m *UserRefreshRequest) GetVersionCode() string {
	if m != nil {
		return m.VersionCode
	}
	return ""
}

type UserUnbindRequest struct {
	// true则解绑手机
	Mobile bool `protobuf:"varint,1,opt,name=mobile,proto3" json:"mobile,omitempty"`
	// true则解绑微信
	Wechat bool `protobuf:"varint,2,opt,name=wechat,proto3" json:"wechat,omitempty"`
	// true则解绑淘宝
	Taobao               bool     `protobuf:"varint,3,opt,name=taobao,proto3" json:"taobao,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserUnbindRequest) Reset()         { *m = UserUnbindRequest{} }
func (m *UserUnbindRequest) String() string { return proto.CompactTextString(m) }
func (*UserUnbindRequest) ProtoMessage()    {}
func (*UserUnbindRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{4}
}
func (m *UserUnbindRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserUnbindRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserUnbindRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserUnbindRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserUnbindRequest.Merge(m, src)
}
func (m *UserUnbindRequest) XXX_Size() int {
	return m.Size()
}
func (m *UserUnbindRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserUnbindRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserUnbindRequest proto.InternalMessageInfo

func (m *UserUnbindRequest) GetMobile() bool {
	if m != nil {
		return m.Mobile
	}
	return false
}

func (m *UserUnbindRequest) GetWechat() bool {
	if m != nil {
		return m.Wechat
	}
	return false
}

func (m *UserUnbindRequest) GetTaobao() bool {
	if m != nil {
		return m.Taobao
	}
	return false
}

type UserLoginRequest struct {
	// 手机号
	Mobile string `protobuf:"bytes,1,opt,name=mobile,proto3" json:"mobile,omitempty"`
	// 手机验证码
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	// 手机发起微信登录的token，非openid
	Wechat string  `protobuf:"bytes,3,opt,name=wechat,proto3" json:"wechat,omitempty"`
	Device *Device `protobuf:"bytes,4,opt,name=device,proto3" json:"device,omitempty"`
	// 渠道
	Channel string `protobuf:"bytes,5,opt,name=channel,proto3" json:"channel,omitempty"`
	// 版本号
	VersionCode string `protobuf:"bytes,6,opt,name=version_code,json=versionCode,proto3" json:"version_code,omitempty"`
	// 包名
	PackageName string `protobuf:"bytes,7,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"`
	// 第三方ID
	ThirdPartyId         string   `protobuf:"bytes,8,opt,name=third_party_id,json=thirdPartyId,proto3" json:"third_party_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserLoginRequest) Reset()         { *m = UserLoginRequest{} }
func (m *UserLoginRequest) String() string { return proto.CompactTextString(m) }
func (*UserLoginRequest) ProtoMessage()    {}
func (*UserLoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{5}
}
func (m *UserLoginRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserLoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserLoginRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserLoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserLoginRequest.Merge(m, src)
}
func (m *UserLoginRequest) XXX_Size() int {
	return m.Size()
}
func (m *UserLoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserLoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserLoginRequest proto.InternalMessageInfo

func (m *UserLoginRequest) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *UserLoginRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *UserLoginRequest) GetWechat() string {
	if m != nil {
		return m.Wechat
	}
	return ""
}

func (m *UserLoginRequest) GetDevice() *Device {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *UserLoginRequest) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

func (m *UserLoginRequest) GetVersionCode() string {
	if m != nil {
		return m.VersionCode
	}
	return ""
}

func (m *UserLoginRequest) GetPackageName() string {
	if m != nil {
		return m.PackageName
	}
	return ""
}

func (m *UserLoginRequest) GetThirdPartyId() string {
	if m != nil {
		return m.ThirdPartyId
	}
	return ""
}

type Device struct {
	Imei      string `protobuf:"bytes,1,opt,name=imei,proto3" json:"imei,omitempty"`
	Idfa      string `protobuf:"bytes,2,opt,name=idfa,proto3" json:"idfa,omitempty"`
	AndroidId string `protobuf:"bytes,3,opt,name=android_id,json=androidId,proto3" json:"android_id,omitempty"`
	Suuid     string `protobuf:"bytes,4,opt,name=suuid,proto3" json:"suuid,omitempty"`
	// MAC 地址
	Mac string `protobuf:"bytes,5,opt,name=mac,proto3" json:"mac,omitempty"`
	// 1 苹果，2 安卓
	Os                   Device_OS `protobuf:"varint,6,opt,name=os,proto3,enum=app.v2.Device_OS" json:"os,omitempty"`
	Oaid                 string    `protobuf:"bytes,7,opt,name=oaid,proto3" json:"oaid,omitempty"`
	Smid                 string    `protobuf:"bytes,8,opt,name=smid,proto3" json:"smid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Device) Reset()         { *m = Device{} }
func (m *Device) String() string { return proto.CompactTextString(m) }
func (*Device) ProtoMessage()    {}
func (*Device) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{6}
}
func (m *Device) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Device) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Device.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Device) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Device.Merge(m, src)
}
func (m *Device) XXX_Size() int {
	return m.Size()
}
func (m *Device) XXX_DiscardUnknown() {
	xxx_messageInfo_Device.DiscardUnknown(m)
}

var xxx_messageInfo_Device proto.InternalMessageInfo

func (m *Device) GetImei() string {
	if m != nil {
		return m.Imei
	}
	return ""
}

func (m *Device) GetIdfa() string {
	if m != nil {
		return m.Idfa
	}
	return ""
}

func (m *Device) GetAndroidId() string {
	if m != nil {
		return m.AndroidId
	}
	return ""
}

func (m *Device) GetSuuid() string {
	if m != nil {
		return m.Suuid
	}
	return ""
}

func (m *Device) GetMac() string {
	if m != nil {
		return m.Mac
	}
	return ""
}

func (m *Device) GetOs() Device_OS {
	if m != nil {
		return m.Os
	}
	return Device_OS_UNKNOWN
}

func (m *Device) GetOaid() string {
	if m != nil {
		return m.Oaid
	}
	return ""
}

func (m *Device) GetSmid() string {
	if m != nil {
		return m.Smid
	}
	return ""
}

type UserInfo struct {
	Id       uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserName string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Wechat   string `protobuf:"bytes,3,opt,name=wechat,proto3" json:"wechat,omitempty"`
	// 头像地址
	HeadImg  string `protobuf:"bytes,4,opt,name=head_img,json=headImg,proto3" json:"head_img,omitempty"`
	Gender   Gender `protobuf:"varint,5,opt,name=gender,proto3,enum=app.v2.Gender" json:"gender,omitempty"`
	Birthday string `protobuf:"bytes,6,opt,name=birthday,proto3" json:"birthday,omitempty"`
	Token    string `protobuf:"bytes,7,opt,name=token,proto3" json:"token,omitempty"`
	// 第三方ID
	ThirdPartyId         string       `protobuf:"bytes,8,opt,name=third_party_id,json=thirdPartyId,proto3" json:"third_party_id,omitempty"`
	IsNew                bool         `protobuf:"varint,9,opt,name=is_new,json=isNew,proto3" json:"is_new"`
	WechatExtra          *WechatExtra `protobuf:"bytes,10,opt,name=wechat_extra,json=wechatExtra,proto3" json:"wechat_extra,omitempty"`
	TaobaoExtra          *TaobaoExtra `protobuf:"bytes,11,opt,name=taobao_extra,json=taobaoExtra,proto3" json:"taobao_extra,omitempty"`
	Mobile               string       `protobuf:"bytes,12,opt,name=mobile,proto3" json:"mobile,omitempty"`
	InviteCode           string       `protobuf:"bytes,13,opt,name=invite_code,json=inviteCode,proto3" json:"invite_code,omitempty"`
	IsDeleted            bool         `protobuf:"varint,14,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	IsInvited            bool         `protobuf:"varint,15,opt,name=is_invited,json=isInvited,proto3" json:"is_invited,omitempty"`
	CreatedAt            string       `protobuf:"bytes,17,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *UserInfo) Reset()         { *m = UserInfo{} }
func (m *UserInfo) String() string { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()    {}
func (*UserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{7}
}
func (m *UserInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfo.Merge(m, src)
}
func (m *UserInfo) XXX_Size() int {
	return m.Size()
}
func (m *UserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfo proto.InternalMessageInfo

func (m *UserInfo) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserInfo) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *UserInfo) GetWechat() string {
	if m != nil {
		return m.Wechat
	}
	return ""
}

func (m *UserInfo) GetHeadImg() string {
	if m != nil {
		return m.HeadImg
	}
	return ""
}

func (m *UserInfo) GetGender() Gender {
	if m != nil {
		return m.Gender
	}
	return Gender_GENDER_UNKNOWN
}

func (m *UserInfo) GetBirthday() string {
	if m != nil {
		return m.Birthday
	}
	return ""
}

func (m *UserInfo) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *UserInfo) GetThirdPartyId() string {
	if m != nil {
		return m.ThirdPartyId
	}
	return ""
}

func (m *UserInfo) GetIsNew() bool {
	if m != nil {
		return m.IsNew
	}
	return false
}

func (m *UserInfo) GetWechatExtra() *WechatExtra {
	if m != nil {
		return m.WechatExtra
	}
	return nil
}

func (m *UserInfo) GetTaobaoExtra() *TaobaoExtra {
	if m != nil {
		return m.TaobaoExtra
	}
	return nil
}

func (m *UserInfo) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *UserInfo) GetInviteCode() string {
	if m != nil {
		return m.InviteCode
	}
	return ""
}

func (m *UserInfo) GetIsDeleted() bool {
	if m != nil {
		return m.IsDeleted
	}
	return false
}

func (m *UserInfo) GetIsInvited() bool {
	if m != nil {
		return m.IsInvited
	}
	return false
}

func (m *UserInfo) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

type UserInfoDetail struct {
	Id       uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserName string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Wechat   string `protobuf:"bytes,3,opt,name=wechat,proto3" json:"wechat,omitempty"`
	// 头像地址
	HeadImg  string `protobuf:"bytes,4,opt,name=head_img,json=headImg,proto3" json:"head_img,omitempty"`
	Gender   Gender `protobuf:"varint,5,opt,name=gender,proto3,enum=app.v2.Gender" json:"gender,omitempty"`
	Birthday string `protobuf:"bytes,6,opt,name=birthday,proto3" json:"birthday,omitempty"`
	Token    string `protobuf:"bytes,7,opt,name=token,proto3" json:"token,omitempty"`
	// 第三方ID
	ThirdPartyId         string       `protobuf:"bytes,8,opt,name=third_party_id,json=thirdPartyId,proto3" json:"third_party_id,omitempty"`
	IsNew                bool         `protobuf:"varint,9,opt,name=is_new,json=isNew,proto3" json:"is_new"`
	WechatExtra          *WechatExtra `protobuf:"bytes,10,opt,name=wechat_extra,json=wechatExtra,proto3" json:"wechat_extra,omitempty"`
	TaobaoExtra          *TaobaoExtra `protobuf:"bytes,11,opt,name=taobao_extra,json=taobaoExtra,proto3" json:"taobao_extra,omitempty"`
	Mobile               string       `protobuf:"bytes,12,opt,name=mobile,proto3" json:"mobile,omitempty"`
	InviteCode           string       `protobuf:"bytes,13,opt,name=invite_code,json=inviteCode,proto3" json:"invite_code,omitempty"`
	IsDeleted            bool         `protobuf:"varint,14,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	IsInvited            bool         `protobuf:"varint,15,opt,name=is_invited,json=isInvited,proto3" json:"is_invited,omitempty"`
	Suuid                string       `protobuf:"bytes,16,opt,name=suuid,proto3" json:"suuid,omitempty"`
	CreatedAt            string       `protobuf:"bytes,17,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Channel              string       `protobuf:"bytes,18,opt,name=channel,proto3" json:"channel,omitempty"`
	VersionCode          string       `protobuf:"bytes,19,opt,name=version_code,json=versionCode,proto3" json:"version_code,omitempty"`
	PackageName          string       `protobuf:"bytes,20,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"`
	Smid                 string       `protobuf:"bytes,21,opt,name=smid,proto3" json:"smid,omitempty"`
	Oaid                 string       `protobuf:"bytes,22,opt,name=oaid,proto3" json:"oaid,omitempty"`
	Imei                 string       `protobuf:"bytes,23,opt,name=imei,proto3" json:"imei,omitempty"`
	Idfa                 string       `protobuf:"bytes,24,opt,name=idfa,proto3" json:"idfa,omitempty"`
	Ip                   string       `protobuf:"bytes,25,opt,name=ip,proto3" json:"ip,omitempty"`
	Mac                  string       `protobuf:"bytes,26,opt,name=mac,proto3" json:"mac,omitempty"`
	AndroidId            string       `protobuf:"bytes,27,opt,name=android_id,json=androidId,proto3" json:"android_id,omitempty"`
	Os                   uint32       `protobuf:"varint,28,opt,name=os,proto3" json:"os,omitempty"`
	CampaignId           string       `protobuf:"bytes,29,opt,name=campaign_id,json=campaignId,proto3" json:"campaign_id,omitempty"`
	Aid                  string       `protobuf:"bytes,30,opt,name=aid,proto3" json:"aid,omitempty"`
	Cid                  string       `protobuf:"bytes,31,opt,name=cid,proto3" json:"cid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *UserInfoDetail) Reset()         { *m = UserInfoDetail{} }
func (m *UserInfoDetail) String() string { return proto.CompactTextString(m) }
func (*UserInfoDetail) ProtoMessage()    {}
func (*UserInfoDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{8}
}
func (m *UserInfoDetail) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserInfoDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserInfoDetail.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserInfoDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfoDetail.Merge(m, src)
}
func (m *UserInfoDetail) XXX_Size() int {
	return m.Size()
}
func (m *UserInfoDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfoDetail.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfoDetail proto.InternalMessageInfo

func (m *UserInfoDetail) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserInfoDetail) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *UserInfoDetail) GetWechat() string {
	if m != nil {
		return m.Wechat
	}
	return ""
}

func (m *UserInfoDetail) GetHeadImg() string {
	if m != nil {
		return m.HeadImg
	}
	return ""
}

func (m *UserInfoDetail) GetGender() Gender {
	if m != nil {
		return m.Gender
	}
	return Gender_GENDER_UNKNOWN
}

func (m *UserInfoDetail) GetBirthday() string {
	if m != nil {
		return m.Birthday
	}
	return ""
}

func (m *UserInfoDetail) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *UserInfoDetail) GetThirdPartyId() string {
	if m != nil {
		return m.ThirdPartyId
	}
	return ""
}

func (m *UserInfoDetail) GetIsNew() bool {
	if m != nil {
		return m.IsNew
	}
	return false
}

func (m *UserInfoDetail) GetWechatExtra() *WechatExtra {
	if m != nil {
		return m.WechatExtra
	}
	return nil
}

func (m *UserInfoDetail) GetTaobaoExtra() *TaobaoExtra {
	if m != nil {
		return m.TaobaoExtra
	}
	return nil
}

func (m *UserInfoDetail) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *UserInfoDetail) GetInviteCode() string {
	if m != nil {
		return m.InviteCode
	}
	return ""
}

func (m *UserInfoDetail) GetIsDeleted() bool {
	if m != nil {
		return m.IsDeleted
	}
	return false
}

func (m *UserInfoDetail) GetIsInvited() bool {
	if m != nil {
		return m.IsInvited
	}
	return false
}

func (m *UserInfoDetail) GetSuuid() string {
	if m != nil {
		return m.Suuid
	}
	return ""
}

func (m *UserInfoDetail) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *UserInfoDetail) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

func (m *UserInfoDetail) GetVersionCode() string {
	if m != nil {
		return m.VersionCode
	}
	return ""
}

func (m *UserInfoDetail) GetPackageName() string {
	if m != nil {
		return m.PackageName
	}
	return ""
}

func (m *UserInfoDetail) GetSmid() string {
	if m != nil {
		return m.Smid
	}
	return ""
}

func (m *UserInfoDetail) GetOaid() string {
	if m != nil {
		return m.Oaid
	}
	return ""
}

func (m *UserInfoDetail) GetImei() string {
	if m != nil {
		return m.Imei
	}
	return ""
}

func (m *UserInfoDetail) GetIdfa() string {
	if m != nil {
		return m.Idfa
	}
	return ""
}

func (m *UserInfoDetail) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *UserInfoDetail) GetMac() string {
	if m != nil {
		return m.Mac
	}
	return ""
}

func (m *UserInfoDetail) GetAndroidId() string {
	if m != nil {
		return m.AndroidId
	}
	return ""
}

func (m *UserInfoDetail) GetOs() uint32 {
	if m != nil {
		return m.Os
	}
	return 0
}

func (m *UserInfoDetail) GetCampaignId() string {
	if m != nil {
		return m.CampaignId
	}
	return ""
}

func (m *UserInfoDetail) GetAid() string {
	if m != nil {
		return m.Aid
	}
	return ""
}

func (m *UserInfoDetail) GetCid() string {
	if m != nil {
		return m.Cid
	}
	return ""
}

type UserInfoReply struct {
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code"`
	// deprecated
	Message              string    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data                 *UserInfo `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Msg                  string    `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *UserInfoReply) Reset()         { *m = UserInfoReply{} }
func (m *UserInfoReply) String() string { return proto.CompactTextString(m) }
func (*UserInfoReply) ProtoMessage()    {}
func (*UserInfoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{9}
}
func (m *UserInfoReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserInfoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserInfoReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserInfoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfoReply.Merge(m, src)
}
func (m *UserInfoReply) XXX_Size() int {
	return m.Size()
}
func (m *UserInfoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfoReply.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfoReply proto.InternalMessageInfo

func (m *UserInfoReply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UserInfoReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UserInfoReply) GetData() *UserInfo {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UserInfoReply) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type UserInfoBatchReply struct {
	Code                 int32             `protobuf:"varint,1,opt,name=code,proto3" json:"code"`
	Data                 []*UserInfoDetail `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Msg                  string            `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg,omitempty"`
	Count                int64             `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *UserInfoBatchReply) Reset()         { *m = UserInfoBatchReply{} }
func (m *UserInfoBatchReply) String() string { return proto.CompactTextString(m) }
func (*UserInfoBatchReply) ProtoMessage()    {}
func (*UserInfoBatchReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{10}
}
func (m *UserInfoBatchReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserInfoBatchReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserInfoBatchReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserInfoBatchReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfoBatchReply.Merge(m, src)
}
func (m *UserInfoBatchReply) XXX_Size() int {
	return m.Size()
}
func (m *UserInfoBatchReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfoBatchReply.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfoBatchReply proto.InternalMessageInfo

func (m *UserInfoBatchReply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UserInfoBatchReply) GetData() []*UserInfoDetail {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UserInfoBatchReply) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *UserInfoBatchReply) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type GetCodeRequest struct {
	Mobile               string   `protobuf:"bytes,1,opt,name=mobile,proto3" json:"mobile,omitempty"`
	PackageName          string   `protobuf:"bytes,2,opt,name=packageName,proto3" json:"packageName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCodeRequest) Reset()         { *m = GetCodeRequest{} }
func (m *GetCodeRequest) String() string { return proto.CompactTextString(m) }
func (*GetCodeRequest) ProtoMessage()    {}
func (*GetCodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{11}
}
func (m *GetCodeRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetCodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetCodeRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetCodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCodeRequest.Merge(m, src)
}
func (m *GetCodeRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetCodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCodeRequest proto.InternalMessageInfo

func (m *GetCodeRequest) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *GetCodeRequest) GetPackageName() string {
	if m != nil {
		return m.PackageName
	}
	return ""
}

type UserInfoBatchRequest struct {
	Id                   []uint64 `protobuf:"varint,1,rep,packed,name=id,proto3" json:"id,omitempty"`
	InviteCode           []string `protobuf:"bytes,2,rep,name=invite_code,json=inviteCode,proto3" json:"invite_code,omitempty"`
	PackageName          string   `protobuf:"bytes,4,opt,name=packageName,proto3" json:"packageName,omitempty"`
	After                int64    `protobuf:"varint,5,opt,name=after,proto3" json:"after,omitempty"`
	Before               int64    `protobuf:"varint,6,opt,name=before,proto3" json:"before,omitempty"`
	Mobile               string   `protobuf:"bytes,7,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Name                 string   `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
	PerPage              int32    `protobuf:"varint,9,opt,name=perPage,proto3" json:"perPage,omitempty"`
	Page                 int32    `protobuf:"varint,10,opt,name=page,proto3" json:"page,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserInfoBatchRequest) Reset()         { *m = UserInfoBatchRequest{} }
func (m *UserInfoBatchRequest) String() string { return proto.CompactTextString(m) }
func (*UserInfoBatchRequest) ProtoMessage()    {}
func (*UserInfoBatchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{12}
}
func (m *UserInfoBatchRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserInfoBatchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserInfoBatchRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserInfoBatchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfoBatchRequest.Merge(m, src)
}
func (m *UserInfoBatchRequest) XXX_Size() int {
	return m.Size()
}
func (m *UserInfoBatchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfoBatchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfoBatchRequest proto.InternalMessageInfo

func (m *UserInfoBatchRequest) GetId() []uint64 {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UserInfoBatchRequest) GetInviteCode() []string {
	if m != nil {
		return m.InviteCode
	}
	return nil
}

func (m *UserInfoBatchRequest) GetPackageName() string {
	if m != nil {
		return m.PackageName
	}
	return ""
}

func (m *UserInfoBatchRequest) GetAfter() int64 {
	if m != nil {
		return m.After
	}
	return 0
}

func (m *UserInfoBatchRequest) GetBefore() int64 {
	if m != nil {
		return m.Before
	}
	return 0
}

func (m *UserInfoBatchRequest) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *UserInfoBatchRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserInfoBatchRequest) GetPerPage() int32 {
	if m != nil {
		return m.PerPage
	}
	return 0
}

func (m *UserInfoBatchRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

type UserInfoRequest struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 同时获得微信相关信息
	Wechat bool `protobuf:"varint,2,opt,name=wechat,proto3" json:"wechat,omitempty"`
	// 同时获得淘宝相关信息
	Taobao               bool     `protobuf:"varint,3,opt,name=taobao,proto3" json:"taobao,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserInfoRequest) Reset()         { *m = UserInfoRequest{} }
func (m *UserInfoRequest) String() string { return proto.CompactTextString(m) }
func (*UserInfoRequest) ProtoMessage()    {}
func (*UserInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{13}
}
func (m *UserInfoRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserInfoRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfoRequest.Merge(m, src)
}
func (m *UserInfoRequest) XXX_Size() int {
	return m.Size()
}
func (m *UserInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfoRequest proto.InternalMessageInfo

func (m *UserInfoRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserInfoRequest) GetWechat() bool {
	if m != nil {
		return m.Wechat
	}
	return false
}

func (m *UserInfoRequest) GetTaobao() bool {
	if m != nil {
		return m.Taobao
	}
	return false
}

type UserInfoUpdateRequest struct {
	// 用户名
	UserName string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	// 头像地址
	HeadImg string `protobuf:"bytes,4,opt,name=head_img,json=headImg,proto3" json:"head_img,omitempty"`
	// 性别
	Gender Gender `protobuf:"varint,5,opt,name=gender,proto3,enum=app.v2.Gender" json:"gender,omitempty"`
	// 生日
	Birthday string `protobuf:"bytes,6,opt,name=birthday,proto3" json:"birthday,omitempty"`
	// 第三方ID
	ThirdPartyId         string   `protobuf:"bytes,7,opt,name=third_party_id,json=thirdPartyId,proto3" json:"third_party_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserInfoUpdateRequest) Reset()         { *m = UserInfoUpdateRequest{} }
func (m *UserInfoUpdateRequest) String() string { return proto.CompactTextString(m) }
func (*UserInfoUpdateRequest) ProtoMessage()    {}
func (*UserInfoUpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{14}
}
func (m *UserInfoUpdateRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserInfoUpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserInfoUpdateRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserInfoUpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfoUpdateRequest.Merge(m, src)
}
func (m *UserInfoUpdateRequest) XXX_Size() int {
	return m.Size()
}
func (m *UserInfoUpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfoUpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfoUpdateRequest proto.InternalMessageInfo

func (m *UserInfoUpdateRequest) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *UserInfoUpdateRequest) GetHeadImg() string {
	if m != nil {
		return m.HeadImg
	}
	return ""
}

func (m *UserInfoUpdateRequest) GetGender() Gender {
	if m != nil {
		return m.Gender
	}
	return Gender_GENDER_UNKNOWN
}

func (m *UserInfoUpdateRequest) GetBirthday() string {
	if m != nil {
		return m.Birthday
	}
	return ""
}

func (m *UserInfoUpdateRequest) GetThirdPartyId() string {
	if m != nil {
		return m.ThirdPartyId
	}
	return ""
}

type EmptyRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyRequest) Reset()         { *m = EmptyRequest{} }
func (m *EmptyRequest) String() string { return proto.CompactTextString(m) }
func (*EmptyRequest) ProtoMessage()    {}
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{15}
}
func (m *EmptyRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EmptyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EmptyRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EmptyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyRequest.Merge(m, src)
}
func (m *EmptyRequest) XXX_Size() int {
	return m.Size()
}
func (m *EmptyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyRequest proto.InternalMessageInfo

type GenericReply struct {
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code"`
	// deprecated
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Msg                  string   `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GenericReply) Reset()         { *m = GenericReply{} }
func (m *GenericReply) String() string { return proto.CompactTextString(m) }
func (*GenericReply) ProtoMessage()    {}
func (*GenericReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{16}
}
func (m *GenericReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GenericReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GenericReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GenericReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenericReply.Merge(m, src)
}
func (m *GenericReply) XXX_Size() int {
	return m.Size()
}
func (m *GenericReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GenericReply.DiscardUnknown(m)
}

var xxx_messageInfo_GenericReply proto.InternalMessageInfo

func (m *GenericReply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GenericReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GenericReply) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type UserSoftDeleteRequest struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserSoftDeleteRequest) Reset()         { *m = UserSoftDeleteRequest{} }
func (m *UserSoftDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*UserSoftDeleteRequest) ProtoMessage()    {}
func (*UserSoftDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{17}
}
func (m *UserSoftDeleteRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserSoftDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserSoftDeleteRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserSoftDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserSoftDeleteRequest.Merge(m, src)
}
func (m *UserSoftDeleteRequest) XXX_Size() int {
	return m.Size()
}
func (m *UserSoftDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserSoftDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserSoftDeleteRequest proto.InternalMessageInfo

func (m *UserSoftDeleteRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type UserBindAdRequest struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CampaignId           string   `protobuf:"bytes,2,opt,name=campaign_id,json=campaignId,proto3" json:"campaign_id,omitempty"`
	Cid                  string   `protobuf:"bytes,3,opt,name=cid,proto3" json:"cid,omitempty"`
	Aid                  string   `protobuf:"bytes,4,opt,name=aid,proto3" json:"aid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserBindAdRequest) Reset()         { *m = UserBindAdRequest{} }
func (m *UserBindAdRequest) String() string { return proto.CompactTextString(m) }
func (*UserBindAdRequest) ProtoMessage()    {}
func (*UserBindAdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f9056a14b86d47, []int{18}
}
func (m *UserBindAdRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserBindAdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserBindAdRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserBindAdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserBindAdRequest.Merge(m, src)
}
func (m *UserBindAdRequest) XXX_Size() int {
	return m.Size()
}
func (m *UserBindAdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserBindAdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserBindAdRequest proto.InternalMessageInfo

func (m *UserBindAdRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserBindAdRequest) GetCampaignId() string {
	if m != nil {
		return m.CampaignId
	}
	return ""
}

func (m *UserBindAdRequest) GetCid() string {
	if m != nil {
		return m.Cid
	}
	return ""
}

func (m *UserBindAdRequest) GetAid() string {
	if m != nil {
		return m.Aid
	}
	return ""
}

func init() {
	proto.RegisterEnum("app.v2.Extra", Extra_name, Extra_value)
	proto.RegisterEnum("app.v2.Gender", Gender_name, Gender_value)
	proto.RegisterEnum("app.v2.Device_OS", Device_OS_name, Device_OS_value)
	proto.RegisterType((*UserBindRequest)(nil), "app.v2.UserBindRequest")
	proto.RegisterType((*TaobaoExtra)(nil), "app.v2.TaobaoExtra")
	proto.RegisterType((*WechatExtra)(nil), "app.v2.WechatExtra")
	proto.RegisterType((*UserRefreshRequest)(nil), "app.v2.UserRefreshRequest")
	proto.RegisterType((*UserUnbindRequest)(nil), "app.v2.UserUnbindRequest")
	proto.RegisterType((*UserLoginRequest)(nil), "app.v2.UserLoginRequest")
	proto.RegisterType((*Device)(nil), "app.v2.Device")
	proto.RegisterType((*UserInfo)(nil), "app.v2.UserInfo")
	proto.RegisterType((*UserInfoDetail)(nil), "app.v2.UserInfoDetail")
	proto.RegisterType((*UserInfoReply)(nil), "app.v2.UserInfoReply")
	proto.RegisterType((*UserInfoBatchReply)(nil), "app.v2.UserInfoBatchReply")
	proto.RegisterType((*GetCodeRequest)(nil), "app.v2.GetCodeRequest")
	proto.RegisterType((*UserInfoBatchRequest)(nil), "app.v2.UserInfoBatchRequest")
	proto.RegisterType((*UserInfoRequest)(nil), "app.v2.UserInfoRequest")
	proto.RegisterType((*UserInfoUpdateRequest)(nil), "app.v2.UserInfoUpdateRequest")
	proto.RegisterType((*EmptyRequest)(nil), "app.v2.EmptyRequest")
	proto.RegisterType((*GenericReply)(nil), "app.v2.GenericReply")
	proto.RegisterType((*UserSoftDeleteRequest)(nil), "app.v2.UserSoftDeleteRequest")
	proto.RegisterType((*UserBindAdRequest)(nil), "app.v2.UserBindAdRequest")
}

func init() { proto.RegisterFile("app.proto", fileDescriptor_e0f9056a14b86d47) }

var fileDescriptor_e0f9056a14b86d47 = []byte{
	// 2314 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x58, 0x4d, 0x6c, 0x1c, 0x49,
	0x15, 0x4e, 0xf7, 0xfc, 0xbf, 0x19, 0x4f, 0xc6, 0x15, 0xc7, 0xe9, 0x4c, 0x6c, 0xc7, 0xee, 0x58,
	0xc1, 0x71, 0xf0, 0xcc, 0xee, 0xb0, 0x42, 0x28, 0x07, 0x48, 0x4f, 0xec, 0xcd, 0x1a, 0x82, 0xbd,
	0xdb, 0x76, 0xc8, 0xfe, 0x64, 0x33, 0x2a, 0x77, 0x97, 0x67, 0x8a, 0xcc, 0x74, 0x37, 0xdd, 0x3d,
	0x4e, 0x4c, 0x12, 0x21, 0x40, 0x5a, 0x50, 0x84, 0x84, 0xe4, 0x65, 0x57, 0xc0, 0x6d, 0x05, 0x07,
	0x84, 0x88, 0xd8, 0xdb, 0x46, 0x20, 0xb4, 0x27, 0x24, 0x8e, 0x88, 0xbd, 0xaf, 0x20, 0x24, 0x59,
	0xb4, 0x07, 0x10, 0x12, 0x5c, 0x22, 0x0e, 0xa8, 0x7e, 0x7a, 0xa6, 0x67, 0x6c, 0x47, 0x09, 0x1c,
	0x40, 0x82, 0xb9, 0x4c, 0xbd, 0xaf, 0xaa, 0xdf, 0xab, 0xf7, 0xea, 0xbd, 0xef, 0x55, 0x37, 0xe4,
	0xb0, 0xe7, 0x55, 0x3c, 0xdf, 0x0d, 0x5d, 0x94, 0x66, 0xc3, 0xad, 0x5a, 0x79, 0xa2, 0xe9, 0xba,
	0xcd, 0x36, 0xa9, 0x62, 0x8f, 0x56, 0xb1, 0xe3, 0xb8, 0x21, 0x0e, 0xa9, 0xeb, 0x04, 0x62, 0x55,
	0xf9, 0x34, 0xff, 0xb3, 0x16, 0x9a, 0xc4, 0x59, 0xd8, 0xc2, 0x6d, 0x6a, 0xe3, 0x90, 0x54, 0x77,
	0x0d, 0xe4, 0xe2, 0x4a, 0x6c, 0xb1, 0xeb, 0x11, 0x07, 0x7b, 0x74, 0xab, 0x56, 0x75, 0x3d, 0xae,
	0x70, 0x0f, 0xe5, 0x63, 0x4d, 0xb7, 0xe9, 0xf2, 0x61, 0x95, 0x8d, 0x04, 0xaa, 0xff, 0x4c, 0x85,
	0x83, 0x17, 0x03, 0xe2, 0xd7, 0xa9, 0x63, 0x9b, 0xe4, 0x2b, 0x5d, 0x12, 0x84, 0xe8, 0x1c, 0xa4,
	0x3b, 0xee, 0x06, 0x6d, 0x13, 0x4d, 0x99, 0x56, 0xe6, 0x72, 0xf5, 0xd3, 0x3b, 0x06, 0xba, 0xad,
	0x1c, 0x9c, 0xbb, 0x32, 0x7b, 0xf3, 0xca, 0x6b, 0x97, 0xed, 0xd7, 0x6f, 0x3c, 0xfb, 0xec, 0xad,
	0xd9, 0x53, 0x8f, 0xea, 0x87, 0xfc, 0xd1, 0xda, 0x30, 0x6a, 0xca, 0x47, 0x11, 0x82, 0xa4, 0xe5,
	0xda, 0x44, 0x53, 0x99, 0x0a, 0x93, 0x8f, 0xd1, 0x38, 0xa4, 0xaf, 0x11, 0xab, 0x85, 0x43, 0x2d,
	0xc1, 0x51, 0x29, 0xa1, 0x32, 0xa4, 0x99, 0x07, 0xcb, 0xb6, 0x96, 0xe4, 0x06, 0x55, 0x4d, 0x31,
	0x25, 0x82, 0x3e, 0x0d, 0x85, 0x10, 0xbb, 0x1b, 0xd8, 0x6d, 0x90, 0xeb, 0xa1, 0x8f, 0xb5, 0xd4,
	0xb4, 0x32, 0x97, 0xaf, 0x1d, 0xaa, 0x88, 0x80, 0x56, 0xd6, 0xf9, 0xdc, 0x12, 0x9b, 0x32, 0xf3,
	0x61, 0x5f, 0x60, 0xcf, 0x09, 0xed, 0xf2, 0xb9, 0xf4, 0xe0, 0x73, 0x97, 0xf8, 0x9c, 0x7c, 0xee,
	0x5a, 0x5f, 0x40, 0x13, 0x90, 0xeb, 0x10, 0xbf, 0x49, 0x96, 0x9d, 0x4d, 0x57, 0xcb, 0x4c, 0x2b,
	0x73, 0x59, 0xb3, 0x0f, 0xe8, 0x77, 0x54, 0xc8, 0xc7, 0x4c, 0xa2, 0x23, 0x90, 0xe9, 0x06, 0xc4,
	0x6f, 0x50, 0x5b, 0xc4, 0xca, 0x4c, 0x33, 0x71, 0xd9, 0x46, 0x47, 0x21, 0xcb, 0x1c, 0x68, 0x04,
	0xd4, 0x96, 0x21, 0xc8, 0x30, 0x79, 0x8d, 0xda, 0x68, 0x0e, 0x4a, 0xa1, 0xeb, 0x35, 0xb0, 0x65,
	0x91, 0x20, 0x68, 0x84, 0xee, 0x55, 0xe2, 0xc8, 0x78, 0x14, 0x43, 0xd7, 0x33, 0x38, 0xbc, 0xce,
	0x50, 0x34, 0x09, 0x80, 0xb7, 0x70, 0x88, 0xfd, 0x46, 0xd7, 0x6f, 0x8b, 0xd8, 0x98, 0x39, 0x81,
	0x5c, 0xf4, 0xdb, 0x4c, 0x51, 0x0b, 0x6f, 0x61, 0x07, 0x37, 0x82, 0xc0, 0x95, 0x8a, 0x52, 0x42,
	0x91, 0xc0, 0xd7, 0x02, 0x57, 0x28, 0x42, 0x90, 0x74, 0xa8, 0x75, 0x95, 0x07, 0x21, 0x67, 0xf2,
	0x31, 0xdb, 0x3a, 0xdf, 0x21, 0xb5, 0xb9, 0x9b, 0xb9, 0x5e, 0xc4, 0x75, 0x18, 0xe1, 0xfb, 0xeb,
	0x86, 0xad, 0x06, 0x3f, 0xc2, 0x2c, 0x9f, 0xce, 0xb3, 0xcd, 0x75, 0xc3, 0xd6, 0x39, 0x76, 0x92,
	0x27, 0xe1, 0x20, 0x5b, 0x43, 0xae, 0x7b, 0xd4, 0x27, 0x8d, 0x90, 0x76, 0x88, 0x96, 0xe3, 0xab,
	0xd8, 0xa3, 0x4b, 0x1c, 0x5d, 0xa7, 0x1d, 0xa2, 0xff, 0x4d, 0x85, 0x7c, 0x2c, 0xd4, 0x68, 0x06,
	0x0a, 0x03, 0x7e, 0x8b, 0xa0, 0xe5, 0xf1, 0xa0, 0xd3, 0x42, 0x6d, 0xd0, 0xa0, 0x0e, 0x8f, 0x5d,
	0xc2, 0xcc, 0x49, 0x64, 0xd9, 0x41, 0x27, 0x60, 0xc4, 0x27, 0x9b, 0x3e, 0x09, 0x5a, 0x03, 0xa1,
	0x2b, 0x48, 0x50, 0xe8, 0x88, 0xf9, 0x96, 0x1c, 0xf0, 0x6d, 0x0c, 0x52, 0x81, 0xe5, 0x7a, 0x44,
	0xc6, 0x49, 0x08, 0xe8, 0x18, 0xe4, 0x58, 0x48, 0x1a, 0x0e, 0xee, 0x10, 0x19, 0xa3, 0x2c, 0x03,
	0x56, 0x70, 0x87, 0xa0, 0x12, 0x24, 0x02, 0x72, 0x9d, 0xc7, 0x28, 0x65, 0xb2, 0x21, 0x2a, 0x43,
	0xd6, 0xf3, 0xdd, 0x2d, 0xea, 0x58, 0x51, 0x6c, 0x7a, 0x32, 0x4f, 0x7b, 0x1a, 0x6e, 0xcb, 0x68,
	0xf0, 0x31, 0xd2, 0x20, 0x63, 0xb9, 0x5d, 0x27, 0xf4, 0xb7, 0x35, 0x10, 0xa9, 0x20, 0x45, 0x34,
	0x05, 0xd0, 0x22, 0xd8, 0xa6, 0x9d, 0x26, 0x3b, 0xe0, 0x3c, 0x9f, 0x8c, 0x21, 0x2c, 0x19, 0x3d,
	0x9f, 0x6e, 0xd1, 0x36, 0x69, 0x12, 0xad, 0x30, 0x9d, 0x60, 0xe7, 0xdf, 0x03, 0x98, 0xde, 0xae,
	0x43, 0x5d, 0x87, 0xda, 0xda, 0x88, 0xd0, 0x2b, 0x45, 0xfd, 0xc7, 0x0a, 0x20, 0x56, 0xd5, 0xa6,
	0x08, 0x4a, 0x54, 0xd8, 0x27, 0x21, 0x6d, 0x93, 0x2d, 0x6a, 0x11, 0x1e, 0x95, 0x7c, 0xad, 0x18,
	0x55, 0xc3, 0x22, 0x47, 0x4d, 0x39, 0xcb, 0x37, 0xdc, 0xc2, 0x8e, 0x43, 0xda, 0x32, 0x4e, 0x91,
	0x88, 0x2e, 0x40, 0x61, 0x8b, 0xf8, 0x01, 0x75, 0x1d, 0x91, 0x1a, 0x3c, 0x58, 0xf5, 0x53, 0x3b,
	0xc6, 0xe8, 0x6d, 0x25, 0xc3, 0x69, 0xe0, 0xf4, 0xec, 0xef, 0x94, 0x64, 0xe8, 0x77, 0xc9, 0xa3,
	0x7a, 0xd2, 0x57, 0x4b, 0xc9, 0x47, 0xf5, 0xbc, 0x9f, 0xab, 0x45, 0x73, 0x66, 0x5e, 0x3e, 0xce,
	0xb2, 0x48, 0x7f, 0x0d, 0x46, 0xd9, 0x2e, 0x2f, 0x3a, 0x1b, 0x31, 0xf6, 0x19, 0x1f, 0x60, 0x9f,
	0x6c, 0x8f, 0x50, 0xfa, 0xe4, 0xa1, 0x0a, 0x5c, 0x92, 0xc7, 0x38, 0xa4, 0x45, 0xdd, 0xf3, 0x4c,
	0xc8, 0x9a, 0x52, 0xd2, 0xff, 0xa2, 0x42, 0x89, 0x69, 0xbf, 0xe0, 0x36, 0xa9, 0xf3, 0x1f, 0xa3,
	0xb6, 0xff, 0xb2, 0x90, 0xa3, 0xe7, 0xa0, 0xe0, 0x61, 0xeb, 0x2a, 0x6e, 0x12, 0x91, 0xed, 0xbc,
	0xf4, 0xeb, 0xa3, 0x3b, 0x46, 0x66, 0x40, 0x87, 0x62, 0xe6, 0xe5, 0x32, 0x5e, 0x03, 0xb3, 0x50,
	0x0c, 0x5b, 0xd4, 0xb7, 0x1b, 0x1e, 0xf6, 0xc3, 0x6d, 0x56, 0x56, 0x22, 0xef, 0x0b, 0x1c, 0x7d,
	0x91, 0x81, 0xcb, 0xb6, 0xfe, 0x67, 0x05, 0xd2, 0xc2, 0x2d, 0x16, 0x22, 0xda, 0x21, 0x54, 0xd6,
	0x37, 0x1f, 0x73, 0xcc, 0xde, 0xc4, 0x51, 0xd8, 0xd8, 0x98, 0x33, 0x9c, 0x63, 0xfb, 0x2e, 0xb5,
	0x99, 0xd2, 0x84, 0x64, 0x38, 0x81, 0xc8, 0x72, 0xed, 0x76, 0x7b, 0x55, 0x2c, 0x04, 0x56, 0x91,
	0x1d, 0x6c, 0xc9, 0x38, 0xb1, 0x21, 0x9a, 0x01, 0xd5, 0x0d, 0x78, 0x64, 0x8a, 0xb5, 0xd1, 0xc1,
	0x08, 0x57, 0x56, 0xd7, 0x4c, 0xd5, 0x0d, 0x98, 0x75, 0x17, 0xf7, 0xb8, 0x8e, 0x8f, 0x19, 0x16,
	0x74, 0x7a, 0xce, 0xf0, 0xb1, 0x3e, 0x0f, 0xea, 0xea, 0x1a, 0x2a, 0x02, 0xac, 0xae, 0x35, 0x2e,
	0xae, 0x7c, 0x61, 0x65, 0xf5, 0xd2, 0x4a, 0xe9, 0x00, 0xca, 0x40, 0x62, 0x79, 0x75, 0xad, 0xa4,
	0xa0, 0x3c, 0x64, 0x8c, 0x95, 0x45, 0x73, 0x75, 0x79, 0xb1, 0xa4, 0xea, 0x6f, 0x26, 0x21, 0xcb,
	0x52, 0x8c, 0xb5, 0x06, 0x54, 0x04, 0x55, 0x76, 0x81, 0xa4, 0xa9, 0x52, 0x9b, 0x91, 0x0a, 0x6f,
	0x0d, 0x3c, 0xcc, 0xc2, 0xe7, 0x2c, 0x03, 0x78, 0x40, 0xf7, 0x4b, 0x97, 0xa3, 0x90, 0x65, 0xe5,
	0xdf, 0xa0, 0x9d, 0xa6, 0xf4, 0x39, 0xc3, 0xe4, 0xe5, 0x4e, 0x93, 0x65, 0x52, 0x93, 0x38, 0x36,
	0xf1, 0xb9, 0xe3, 0xc5, 0x7e, 0x26, 0x9d, 0xe7, 0xa8, 0x29, 0x67, 0x19, 0x3b, 0x6d, 0x50, 0x3f,
	0x6c, 0xd9, 0x78, 0x3b, 0xe2, 0xb2, 0x48, 0x66, 0xf1, 0x14, 0xa4, 0x29, 0xa2, 0x20, 0x84, 0x27,
	0x3b, 0x5d, 0x34, 0x03, 0x69, 0x1a, 0x34, 0x1c, 0x72, 0x8d, 0x73, 0x5b, 0xb6, 0x0e, 0x1f, 0x7f,
	0x78, 0x5c, 0x22, 0x66, 0x8a, 0x06, 0x2b, 0xe4, 0xda, 0xae, 0x9e, 0x0b, 0x4f, 0xd8, 0x73, 0x87,
	0x7b, 0x7c, 0xfe, 0x09, 0x7b, 0x7c, 0x9f, 0x2a, 0x0a, 0x22, 0x8a, 0xb2, 0x40, 0x8f, 0x43, 0x9e,
	0x3a, 0x5b, 0x34, 0x24, 0xa2, 0x62, 0x04, 0x39, 0x82, 0x80, 0x78, 0x15, 0x4c, 0x02, 0xd0, 0xa0,
	0x61, 0x93, 0x36, 0x09, 0x89, 0xad, 0x15, 0x45, 0x97, 0xa7, 0xc1, 0xa2, 0x00, 0xe4, 0xb4, 0x58,
	0x6f, 0x6b, 0x07, 0xa3, 0xe9, 0x65, 0x01, 0xb0, 0x69, 0xcb, 0x27, 0x38, 0x24, 0x76, 0x03, 0x87,
	0xda, 0xa8, 0x48, 0x5a, 0x89, 0x18, 0xa1, 0xfe, 0xf7, 0x34, 0x14, 0xa3, 0xac, 0x58, 0x24, 0x21,
	0xa6, 0xed, 0xff, 0xe7, 0xc6, 0xff, 0x4c, 0x6e, 0xf4, 0x18, 0xab, 0x14, 0x67, 0xac, 0xc7, 0x67,
	0x4c, 0x9c, 0xfc, 0xd1, 0x20, 0xf9, 0xcf, 0x0c, 0x91, 0xff, 0x21, 0x71, 0x5f, 0x8a, 0x33, 0xfa,
	0xcc, 0x10, 0xa3, 0x8f, 0x89, 0x25, 0x71, 0xfa, 0x8e, 0x78, 0xee, 0x70, 0x9f, 0xe7, 0x7a, 0x7c,
	0x38, 0x3e, 0xc8, 0x87, 0x9c, 0xb5, 0x8f, 0xec, 0xc1, 0xda, 0x5a, 0x8c, 0xb5, 0x59, 0x3a, 0x7b,
	0xda, 0x51, 0x8e, 0xa8, 0xd4, 0x8b, 0x08, 0xb9, 0xdc, 0x27, 0xe4, 0x41, 0x5e, 0x3f, 0x36, 0xcc,
	0xeb, 0x45, 0xce, 0xd7, 0x13, 0xd3, 0xca, 0xdc, 0x08, 0x27, 0xe7, 0xe3, 0x90, 0xb7, 0x70, 0xc7,
	0xc3, 0xb4, 0xc9, 0xef, 0x6c, 0x93, 0xe2, 0x50, 0x22, 0x68, 0x99, 0x53, 0x3e, 0xdb, 0xec, 0x94,
	0xb0, 0x80, 0x45, 0x13, 0xb0, 0xa8, 0xad, 0x1d, 0x17, 0x88, 0x45, 0x6d, 0xfd, 0x6b, 0x30, 0x12,
	0x95, 0x9d, 0x49, 0xbc, 0xf6, 0x36, 0x9a, 0x90, 0x7d, 0x9a, 0xd5, 0x5d, 0xaa, 0x9e, 0xfd, 0xf8,
	0xc3, 0xe3, 0x5c, 0x96, 0x1d, 0x5b, 0x83, 0x4c, 0x87, 0x04, 0x01, 0x6e, 0x46, 0x15, 0x18, 0x89,
	0x68, 0x16, 0x92, 0x36, 0x0e, 0x31, 0x2f, 0xbf, 0x7c, 0xad, 0x14, 0xa5, 0x5a, 0x4f, 0x39, 0x9f,
	0xe5, 0x4e, 0x07, 0x51, 0x25, 0xb2, 0xa1, 0xfe, 0x86, 0xbc, 0x75, 0xb1, 0x45, 0x75, 0x1c, 0x5a,
	0xad, 0x27, 0xd9, 0xc6, 0x7c, 0xcf, 0x58, 0x62, 0x2e, 0x5f, 0x1b, 0x1f, 0x36, 0x26, 0x08, 0x64,
	0x3f, 0x93, 0x2c, 0xdd, 0xf8, 0x5d, 0x92, 0xd7, 0x7d, 0xc2, 0x14, 0x82, 0xde, 0x86, 0xe2, 0x79,
	0x12, 0xb2, 0xec, 0x88, 0xee, 0x3d, 0x9f, 0x19, 0xba, 0xf7, 0x4c, 0xef, 0x18, 0xa5, 0xdb, 0x4a,
	0xfa, 0xb2, 0xcd, 0xae, 0x36, 0xbd, 0xce, 0x0f, 0x7e, 0xb6, 0x26, 0xb1, 0x5e, 0xbd, 0x4c, 0x43,
	0x3c, 0x95, 0x64, 0xa8, 0xe2, 0x90, 0xfe, 0x57, 0x05, 0xc6, 0x86, 0xdc, 0x16, 0x46, 0x23, 0xd6,
	0x4b, 0x48, 0xd6, 0x1b, 0x2a, 0x3d, 0x95, 0xdf, 0x67, 0xe3, 0xa5, 0x37, 0x64, 0x2b, 0xb9, 0x3b,
	0x93, 0xc7, 0x20, 0x85, 0x37, 0x43, 0xc9, 0x73, 0x09, 0x53, 0x08, 0xac, 0xd6, 0x37, 0xc8, 0xa6,
	0xeb, 0x8b, 0xcb, 0x51, 0xc2, 0x94, 0x52, 0x8c, 0x03, 0x32, 0x03, 0x1c, 0xc0, 0x5e, 0x87, 0x98,
	0x01, 0xd9, 0xf7, 0xd9, 0x98, 0xa5, 0x83, 0x47, 0xfc, 0x17, 0x59, 0x3a, 0xe4, 0xf8, 0x55, 0x3f,
	0x12, 0xd9, 0x6a, 0x8f, 0xc1, 0xc0, 0x61, 0x3e, 0xd6, 0x5f, 0x12, 0x6f, 0xcd, 0x22, 0xd7, 0x06,
	0xbd, 0x8d, 0x38, 0xfe, 0x69, 0xef, 0xab, 0x1f, 0xa8, 0x70, 0x38, 0xd2, 0x79, 0xd1, 0x63, 0x2f,
	0xfa, 0xfd, 0x4b, 0xeb, 0x70, 0xb7, 0xa8, 0x9f, 0xdc, 0x31, 0x72, 0xf4, 0x80, 0xf8, 0x9d, 0xdd,
	0x31, 0x72, 0xaf, 0x88, 0xe1, 0xec, 0x59, 0x71, 0x7d, 0x53, 0xf9, 0x9f, 0x06, 0xb1, 0xae, 0xf2,
	0xc2, 0x70, 0xf7, 0xa8, 0x2f, 0xec, 0x18, 0x87, 0x6e, 0x2b, 0xa5, 0x2b, 0x73, 0x37, 0x5b, 0x61,
	0xe8, 0x05, 0x9f, 0x3b, 0x53, 0xad, 0x56, 0xe6, 0x4f, 0xcd, 0x3e, 0xaa, 0x8f, 0xf9, 0xa8, 0xb6,
	0x0b, 0x7e, 0xfa, 0x66, 0xf3, 0xfa, 0x70, 0xb3, 0xa9, 0x1b, 0x3b, 0xc6, 0xe4, 0x6d, 0xa5, 0x7c,
	0x65, 0xee, 0xe6, 0x65, 0xfb, 0xc6, 0x73, 0xb7, 0x16, 0x58, 0xaa, 0x7d, 0xb2, 0xd6, 0xfb, 0x67,
	0xb6, 0xa7, 0xfc, 0x89, 0xda, 0x63, 0x16, 0xc4, 0xfa, 0xd5, 0xee, 0xce, 0x94, 0xd9, 0xe3, 0x4e,
	0x5a, 0x84, 0xc2, 0x52, 0xc7, 0x0b, 0xb7, 0x65, 0x2c, 0xf5, 0x97, 0xa1, 0x70, 0x9e, 0x38, 0xc4,
	0xa7, 0xd6, 0xbf, 0xc7, 0x11, 0xb2, 0x14, 0x13, 0xfd, 0xea, 0xff, 0x84, 0x38, 0xbe, 0x35, 0x77,
	0x33, 0x14, 0xbd, 0x62, 0x9f, 0xc4, 0xd0, 0x5b, 0xe2, 0xad, 0xa7, 0x4e, 0x1d, 0xdb, 0xb0, 0xf7,
	0xcb, 0x9e, 0x21, 0x46, 0x54, 0xf7, 0x62, 0x44, 0xab, 0x77, 0x65, 0x66, 0xc3, 0x88, 0x23, 0x93,
	0x3d, 0x8e, 0x9c, 0xff, 0x2c, 0xa4, 0x44, 0x33, 0x1c, 0x85, 0x11, 0x79, 0x97, 0x6d, 0x2c, 0xbd,
	0xbc, 0x6e, 0x1a, 0xa5, 0x03, 0xa8, 0x04, 0x85, 0x4b, 0x4b, 0xe7, 0x5e, 0x30, 0xd6, 0x25, 0xa2,
	0x30, 0x64, 0xdd, 0x58, 0xad, 0x1b, 0xab, 0x12, 0x51, 0xe7, 0xcf, 0x42, 0x5a, 0x9c, 0x29, 0x42,
	0x50, 0x3c, 0xbf, 0xb4, 0xb2, 0xb8, 0x64, 0xc6, 0xee, 0xc4, 0x07, 0x21, 0x2f, 0xb1, 0x2f, 0x1a,
	0x17, 0x96, 0x4a, 0x0a, 0xb3, 0x22, 0x81, 0xe7, 0x97, 0x38, 0xa4, 0xd6, 0x7e, 0x9d, 0x81, 0x84,
	0xe1, 0x79, 0xe8, 0x4b, 0x90, 0xe2, 0xef, 0x61, 0x48, 0x8b, 0x13, 0x5c, 0xfc, 0xd5, 0xac, 0x7c,
	0x78, 0x17, 0xcf, 0xb2, 0x03, 0xd2, 0x27, 0x76, 0x8c, 0x2c, 0xa4, 0x3f, 0xfa, 0xc1, 0x2f, 0x1f,
	0xfc, 0xea, 0xad, 0x6f, 0x7c, 0x70, 0xff, 0x4d, 0x35, 0xaf, 0xa7, 0xab, 0x6d, 0xf6, 0xe0, 0x19,
	0x65, 0x1e, 0xbd, 0x04, 0x19, 0xc9, 0x74, 0x68, 0xbc, 0x9f, 0x86, 0x71, 0xea, 0x2b, 0x8f, 0xc5,
	0xd2, 0xb3, 0x77, 0xee, 0xba, 0x36, 0xac, 0x36, 0x83, 0x52, 0x55, 0x7e, 0xe6, 0x57, 0xb8, 0x4a,
	0x7e, 0xa5, 0x3f, 0xb2, 0x7b, 0x4b, 0x8f, 0xdd, 0xeb, 0x89, 0x1d, 0xa3, 0x08, 0x85, 0x8f, 0xbe,
	0xf7, 0x93, 0x87, 0xdf, 0x7e, 0xef, 0xfe, 0xfb, 0xef, 0x3c, 0xfc, 0xfa, 0xcf, 0xb9, 0xea, 0x02,
	0x82, 0x2a, 0x75, 0x36, 0xdd, 0xea, 0x0d, 0x6a, 0xdf, 0x42, 0x0e, 0xcb, 0xc0, 0xb0, 0x47, 0x96,
	0x68, 0x62, 0x58, 0x57, 0x9c, 0x43, 0xcb, 0xe5, 0x7d, 0x66, 0x99, 0xb9, 0xd9, 0xbd, 0xcd, 0x8d,
	0xa0, 0x7c, 0x75, 0x83, 0xad, 0xe2, 0x46, 0x11, 0x01, 0x10, 0x74, 0xc2, 0x5d, 0x9a, 0x1c, 0xd6,
	0x37, 0x40, 0x35, 0xfb, 0x39, 0x36, 0xb3, 0xb7, 0x25, 0xd0, 0x53, 0xdc, 0x06, 0x3b, 0x89, 0x57,
	0x20, 0xc9, 0x32, 0x7a, 0x30, 0x66, 0xb1, 0xaf, 0x8a, 0xff, 0x82, 0xea, 0x0d, 0xea, 0xd8, 0x4c,
	0x75, 0x03, 0xd2, 0xa2, 0x58, 0xd0, 0xd1, 0x61, 0xe5, 0xbd, 0x02, 0xda, 0xe7, 0x98, 0xf7, 0x0b,
	0x91, 0x9e, 0xe5, 0xda, 0x17, 0x70, 0x64, 0x40, 0x7c, 0x83, 0x18, 0x34, 0x30, 0xf0, 0x5d, 0xe2,
	0x69, 0xcf, 0x5c, 0xcf, 0x54, 0xbb, 0x4e, 0xe4, 0xc1, 0x65, 0xc8, 0xc8, 0x4f, 0x31, 0x68, 0xe0,
	0x40, 0x07, 0xbf, 0xcf, 0xec, 0x67, 0x62, 0x6a, 0x38, 0x57, 0xd9, 0xf6, 0xe5, 0xf7, 0x2e, 0xa6,
	0x1d, 0x03, 0xf4, 0x59, 0x67, 0xf0, 0x84, 0x77, 0xb1, 0xd1, 0x7e, 0x36, 0x26, 0x87, 0x6d, 0x14,
	0xe6, 0x63, 0x49, 0x5b, 0xff, 0x87, 0xb2, 0x63, 0xfc, 0x41, 0x41, 0xcf, 0xc3, 0xb1, 0x07, 0x6f,
	0xbd, 0x71, 0xff, 0xee, 0x0f, 0x1f, 0x7c, 0xe7, 0xed, 0xfb, 0x77, 0xef, 0x3c, 0xf8, 0xee, 0xbb,
	0xd2, 0xf1, 0xbb, 0x77, 0x1e, 0xbc, 0xff, 0x4d, 0x7d, 0x1a, 0xd2, 0x7f, 0x7a, 0xf7, 0xbd, 0x87,
	0xbf, 0xf8, 0x69, 0x79, 0xbc, 0xd9, 0xbd, 0x4e, 0xcf, 0x52, 0x67, 0x93, 0x3a, 0x34, 0xa4, 0x24,
	0xa8, 0x58, 0x6e, 0xa7, 0x62, 0x39, 0xb5, 0x54, 0xad, 0xf2, 0x4c, 0xe5, 0x19, 0x3d, 0x53, 0xc5,
	0x9e, 0x57, 0xdd, 0xaa, 0xd5, 0x4a, 0xd8, 0xf3, 0xda, 0xd4, 0xe2, 0x1f, 0xaa, 0xab, 0x5f, 0x0e,
	0x5c, 0xe7, 0xcc, 0x2e, 0xe4, 0xd5, 0x09, 0x28, 0x43, 0xe2, 0xf3, 0x97, 0xd6, 0xd1, 0xa1, 0xac,
	0x5a, 0x1e, 0x31, 0xba, 0x61, 0xcb, 0xf5, 0xe9, 0x57, 0xf9, 0x82, 0x69, 0x75, 0x23, 0x07, 0x19,
	0x31, 0x7b, 0xc0, 0x37, 0xe0, 0xf0, 0xd0, 0xee, 0x1e, 0xbe, 0xfd, 0xad, 0x87, 0xef, 0xfc, 0x08,
	0xcd, 0xb1, 0x4e, 0x76, 0xa6, 0x5a, 0xed, 0xb8, 0x0e, 0x09, 0xe5, 0xa3, 0x0b, 0xb6, 0x6b, 0x05,
	0x95, 0xeb, 0xcd, 0x4a, 0x88, 0x9b, 0x21, 0xb5, 0x2a, 0x96, 0x53, 0x3d, 0x51, 0xfd, 0xcd, 0xbd,
	0x29, 0xe5, 0xb7, 0xf7, 0xa6, 0x94, 0xdf, 0xdf, 0x9b, 0x52, 0xbe, 0xff, 0xc7, 0xa9, 0x03, 0xaf,
	0xa6, 0xae, 0xd2, 0x30, 0xdc, 0xde, 0x48, 0xf3, 0x8f, 0xe5, 0x9f, 0xfa, 0x67, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xc1, 0x04, 0x42, 0x52, 0xd2, 0x17, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AppClient is the client API for App service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AppClient interface {
	// 用户从未登录状态注册或登录时调用。如果用户已登录，需要绑定手机号或微信号，请使用bind接口。
	Login(ctx context.Context, in *UserLoginRequest, opts ...grpc.CallOption) (*UserInfoReply, error)
	// 获得验证码
	GetCode(ctx context.Context, in *GetCodeRequest, opts ...grpc.CallOption) (*GenericReply, error)
	// 获取任意用户信息，填0获取本人信息
	GetInfo(ctx context.Context, in *UserInfoRequest, opts ...grpc.CallOption) (*UserInfoReply, error)
	// 批量获取用户信息接口。如果一个或多个用户ID在数据库中不存在，不会报错，在返回结果中只会包含存在的数据。
	GetInfoBatch(ctx context.Context, in *UserInfoBatchRequest, opts ...grpc.CallOption) (*UserInfoBatchReply, error)
	// 更新个人信息
	// 本接口会返回新的token，后续请求务必请将老JWT替换为新token。
	UpdateInfo(ctx context.Context, in *UserInfoUpdateRequest, opts ...grpc.CallOption) (*UserInfoReply, error)
	// 用户已登录后，绑定额外的手机号或微信号。
	// 本接口会返回新的token，后续请求务必请将老JWT替换为新token。
	Bind(ctx context.Context, in *UserBindRequest, opts ...grpc.CallOption) (*UserInfoReply, error)
	// 绑定买量侧广告ID
	BindAd(ctx context.Context, in *UserBindAdRequest, opts ...grpc.CallOption) (*GenericReply, error)
	// 针对已登录用户，取消绑定手机或微信登录方式
	// 本接口会返回新的token，后续请求务必请将老JWT替换为新token。
	Unbind(ctx context.Context, in *UserUnbindRequest, opts ...grpc.CallOption) (*UserInfoReply, error)
	// JWT Token续期，需要在每次升级系统或每次冷启动前调用，
	// 避免jwt中的信息与实际信息不一致。本接口会返回新的JWT，
	// 后续请求务必请将老JWT替换为新JWT。
	Refresh(ctx context.Context, in *UserRefreshRequest, opts ...grpc.CallOption) (*UserInfoReply, error)
	// 软删除用户接口。如果指定ID删除，需要使用专门的管理员JWT。
	// 如果只删除当前JWT当中的用户，无需管理员权限，ID填0即可。
	SoftDelete(ctx context.Context, in *UserSoftDeleteRequest, opts ...grpc.CallOption) (*UserInfoReply, error)
}

type appClient struct {
	cc *grpc.ClientConn
}

func NewAppClient(cc *grpc.ClientConn) AppClient {
	return &appClient{cc}
}

func (c *appClient) Login(ctx context.Context, in *UserLoginRequest, opts ...grpc.CallOption) (*UserInfoReply, error) {
	out := new(UserInfoReply)
	err := c.cc.Invoke(ctx, "/app.v2.App/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appClient) GetCode(ctx context.Context, in *GetCodeRequest, opts ...grpc.CallOption) (*GenericReply, error) {
	out := new(GenericReply)
	err := c.cc.Invoke(ctx, "/app.v2.App/GetCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appClient) GetInfo(ctx context.Context, in *UserInfoRequest, opts ...grpc.CallOption) (*UserInfoReply, error) {
	out := new(UserInfoReply)
	err := c.cc.Invoke(ctx, "/app.v2.App/GetInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appClient) GetInfoBatch(ctx context.Context, in *UserInfoBatchRequest, opts ...grpc.CallOption) (*UserInfoBatchReply, error) {
	out := new(UserInfoBatchReply)
	err := c.cc.Invoke(ctx, "/app.v2.App/GetInfoBatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appClient) UpdateInfo(ctx context.Context, in *UserInfoUpdateRequest, opts ...grpc.CallOption) (*UserInfoReply, error) {
	out := new(UserInfoReply)
	err := c.cc.Invoke(ctx, "/app.v2.App/UpdateInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appClient) Bind(ctx context.Context, in *UserBindRequest, opts ...grpc.CallOption) (*UserInfoReply, error) {
	out := new(UserInfoReply)
	err := c.cc.Invoke(ctx, "/app.v2.App/Bind", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appClient) BindAd(ctx context.Context, in *UserBindAdRequest, opts ...grpc.CallOption) (*GenericReply, error) {
	out := new(GenericReply)
	err := c.cc.Invoke(ctx, "/app.v2.App/BindAd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appClient) Unbind(ctx context.Context, in *UserUnbindRequest, opts ...grpc.CallOption) (*UserInfoReply, error) {
	out := new(UserInfoReply)
	err := c.cc.Invoke(ctx, "/app.v2.App/Unbind", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appClient) Refresh(ctx context.Context, in *UserRefreshRequest, opts ...grpc.CallOption) (*UserInfoReply, error) {
	out := new(UserInfoReply)
	err := c.cc.Invoke(ctx, "/app.v2.App/Refresh", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appClient) SoftDelete(ctx context.Context, in *UserSoftDeleteRequest, opts ...grpc.CallOption) (*UserInfoReply, error) {
	out := new(UserInfoReply)
	err := c.cc.Invoke(ctx, "/app.v2.App/SoftDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AppServer is the server API for App service.
type AppServer interface {
	// 用户从未登录状态注册或登录时调用。如果用户已登录，需要绑定手机号或微信号，请使用bind接口。
	Login(context.Context, *UserLoginRequest) (*UserInfoReply, error)
	// 获得验证码
	GetCode(context.Context, *GetCodeRequest) (*GenericReply, error)
	// 获取任意用户信息，填0获取本人信息
	GetInfo(context.Context, *UserInfoRequest) (*UserInfoReply, error)
	// 批量获取用户信息接口。如果一个或多个用户ID在数据库中不存在，不会报错，在返回结果中只会包含存在的数据。
	GetInfoBatch(context.Context, *UserInfoBatchRequest) (*UserInfoBatchReply, error)
	// 更新个人信息
	// 本接口会返回新的token，后续请求务必请将老JWT替换为新token。
	UpdateInfo(context.Context, *UserInfoUpdateRequest) (*UserInfoReply, error)
	// 用户已登录后，绑定额外的手机号或微信号。
	// 本接口会返回新的token，后续请求务必请将老JWT替换为新token。
	Bind(context.Context, *UserBindRequest) (*UserInfoReply, error)
	// 绑定买量侧广告ID
	BindAd(context.Context, *UserBindAdRequest) (*GenericReply, error)
	// 针对已登录用户，取消绑定手机或微信登录方式
	// 本接口会返回新的token，后续请求务必请将老JWT替换为新token。
	Unbind(context.Context, *UserUnbindRequest) (*UserInfoReply, error)
	// JWT Token续期，需要在每次升级系统或每次冷启动前调用，
	// 避免jwt中的信息与实际信息不一致。本接口会返回新的JWT，
	// 后续请求务必请将老JWT替换为新JWT。
	Refresh(context.Context, *UserRefreshRequest) (*UserInfoReply, error)
	// 软删除用户接口。如果指定ID删除，需要使用专门的管理员JWT。
	// 如果只删除当前JWT当中的用户，无需管理员权限，ID填0即可。
	SoftDelete(context.Context, *UserSoftDeleteRequest) (*UserInfoReply, error)
}

// UnimplementedAppServer can be embedded to have forward compatible implementations.
type UnimplementedAppServer struct {
}

func (*UnimplementedAppServer) Login(ctx context.Context, req *UserLoginRequest) (*UserInfoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (*UnimplementedAppServer) GetCode(ctx context.Context, req *GetCodeRequest) (*GenericReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCode not implemented")
}
func (*UnimplementedAppServer) GetInfo(ctx context.Context, req *UserInfoRequest) (*UserInfoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInfo not implemented")
}
func (*UnimplementedAppServer) GetInfoBatch(ctx context.Context, req *UserInfoBatchRequest) (*UserInfoBatchReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInfoBatch not implemented")
}
func (*UnimplementedAppServer) UpdateInfo(ctx context.Context, req *UserInfoUpdateRequest) (*UserInfoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateInfo not implemented")
}
func (*UnimplementedAppServer) Bind(ctx context.Context, req *UserBindRequest) (*UserInfoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Bind not implemented")
}
func (*UnimplementedAppServer) BindAd(ctx context.Context, req *UserBindAdRequest) (*GenericReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BindAd not implemented")
}
func (*UnimplementedAppServer) Unbind(ctx context.Context, req *UserUnbindRequest) (*UserInfoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Unbind not implemented")
}
func (*UnimplementedAppServer) Refresh(ctx context.Context, req *UserRefreshRequest) (*UserInfoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Refresh not implemented")
}
func (*UnimplementedAppServer) SoftDelete(ctx context.Context, req *UserSoftDeleteRequest) (*UserInfoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SoftDelete not implemented")
}

func RegisterAppServer(s *grpc.Server, srv AppServer) {
	s.RegisterService(&_App_serviceDesc, srv)
}

func _App_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserLoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.v2.App/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServer).Login(ctx, req.(*UserLoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _App_GetCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServer).GetCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.v2.App/GetCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServer).GetCode(ctx, req.(*GetCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _App_GetInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServer).GetInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.v2.App/GetInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServer).GetInfo(ctx, req.(*UserInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _App_GetInfoBatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserInfoBatchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServer).GetInfoBatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.v2.App/GetInfoBatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServer).GetInfoBatch(ctx, req.(*UserInfoBatchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _App_UpdateInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserInfoUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServer).UpdateInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.v2.App/UpdateInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServer).UpdateInfo(ctx, req.(*UserInfoUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _App_Bind_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserBindRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServer).Bind(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.v2.App/Bind",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServer).Bind(ctx, req.(*UserBindRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _App_BindAd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserBindAdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServer).BindAd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.v2.App/BindAd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServer).BindAd(ctx, req.(*UserBindAdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _App_Unbind_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserUnbindRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServer).Unbind(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.v2.App/Unbind",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServer).Unbind(ctx, req.(*UserUnbindRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _App_Refresh_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRefreshRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServer).Refresh(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.v2.App/Refresh",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServer).Refresh(ctx, req.(*UserRefreshRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _App_SoftDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserSoftDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServer).SoftDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.v2.App/SoftDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServer).SoftDelete(ctx, req.(*UserSoftDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _App_serviceDesc = grpc.ServiceDesc{
	ServiceName: "app.v2.App",
	HandlerType: (*AppServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _App_Login_Handler,
		},
		{
			MethodName: "GetCode",
			Handler:    _App_GetCode_Handler,
		},
		{
			MethodName: "GetInfo",
			Handler:    _App_GetInfo_Handler,
		},
		{
			MethodName: "GetInfoBatch",
			Handler:    _App_GetInfoBatch_Handler,
		},
		{
			MethodName: "UpdateInfo",
			Handler:    _App_UpdateInfo_Handler,
		},
		{
			MethodName: "Bind",
			Handler:    _App_Bind_Handler,
		},
		{
			MethodName: "BindAd",
			Handler:    _App_BindAd_Handler,
		},
		{
			MethodName: "Unbind",
			Handler:    _App_Unbind_Handler,
		},
		{
			MethodName: "Refresh",
			Handler:    _App_Refresh_Handler,
		},
		{
			MethodName: "SoftDelete",
			Handler:    _App_SoftDelete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "app.proto",
}

func (m *UserBindRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserBindRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserBindRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MergeInfo {
		i--
		if m.MergeInfo {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x38
	}
	if m.WechatExtra != nil {
		{
			size, err := m.WechatExtra.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApp(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.TaobaoExtra != nil {
		{
			size, err := m.TaobaoExtra.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApp(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if len(m.OpenId) > 0 {
		i -= len(m.OpenId)
		copy(dAtA[i:], m.OpenId)
		i = encodeVarintApp(dAtA, i, uint64(len(m.OpenId)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Wechat) > 0 {
		i -= len(m.Wechat)
		copy(dAtA[i:], m.Wechat)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Wechat)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Code) > 0 {
		i -= len(m.Code)
		copy(dAtA[i:], m.Code)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Code)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Mobile) > 0 {
		i -= len(m.Mobile)
		copy(dAtA[i:], m.Mobile)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Mobile)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *TaobaoExtra) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TaobaoExtra) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TaobaoExtra) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.TopExpireTime) > 0 {
		i -= len(m.TopExpireTime)
		copy(dAtA[i:], m.TopExpireTime)
		i = encodeVarintApp(dAtA, i, uint64(len(m.TopExpireTime)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.TopAuthCode) > 0 {
		i -= len(m.TopAuthCode)
		copy(dAtA[i:], m.TopAuthCode)
		i = encodeVarintApp(dAtA, i, uint64(len(m.TopAuthCode)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.OpenId) > 0 {
		i -= len(m.OpenId)
		copy(dAtA[i:], m.OpenId)
		i = encodeVarintApp(dAtA, i, uint64(len(m.OpenId)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Nick) > 0 {
		i -= len(m.Nick)
		copy(dAtA[i:], m.Nick)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Nick)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.HavanaSsoToken) > 0 {
		i -= len(m.HavanaSsoToken)
		copy(dAtA[i:], m.HavanaSsoToken)
		i = encodeVarintApp(dAtA, i, uint64(len(m.HavanaSsoToken)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.AvatarUrl) > 0 {
		i -= len(m.AvatarUrl)
		copy(dAtA[i:], m.AvatarUrl)
		i = encodeVarintApp(dAtA, i, uint64(len(m.AvatarUrl)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.TopAccessToken) > 0 {
		i -= len(m.TopAccessToken)
		copy(dAtA[i:], m.TopAccessToken)
		i = encodeVarintApp(dAtA, i, uint64(len(m.TopAccessToken)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.OpenSid) > 0 {
		i -= len(m.OpenSid)
		copy(dAtA[i:], m.OpenSid)
		i = encodeVarintApp(dAtA, i, uint64(len(m.OpenSid)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.UserId) > 0 {
		i -= len(m.UserId)
		copy(dAtA[i:], m.UserId)
		i = encodeVarintApp(dAtA, i, uint64(len(m.UserId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *WechatExtra) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WechatExtra) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WechatExtra) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Unionid) > 0 {
		i -= len(m.Unionid)
		copy(dAtA[i:], m.Unionid)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Unionid)))
		i--
		dAtA[i] = 0x6a
	}
	if len(m.Privilege) > 0 {
		for iNdEx := len(m.Privilege) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Privilege[iNdEx])
			copy(dAtA[i:], m.Privilege[iNdEx])
			i = encodeVarintApp(dAtA, i, uint64(len(m.Privilege[iNdEx])))
			i--
			dAtA[i] = 0x62
		}
	}
	if len(m.Headimgurl) > 0 {
		i -= len(m.Headimgurl)
		copy(dAtA[i:], m.Headimgurl)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Headimgurl)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.Country) > 0 {
		i -= len(m.Country)
		copy(dAtA[i:], m.Country)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Country)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.City) > 0 {
		i -= len(m.City)
		copy(dAtA[i:], m.City)
		i = encodeVarintApp(dAtA, i, uint64(len(m.City)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.Province) > 0 {
		i -= len(m.Province)
		copy(dAtA[i:], m.Province)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Province)))
		i--
		dAtA[i] = 0x42
	}
	if m.Sex != 0 {
		i = encodeVarintApp(dAtA, i, uint64(m.Sex))
		i--
		dAtA[i] = 0x38
	}
	if len(m.NickName) > 0 {
		i -= len(m.NickName)
		copy(dAtA[i:], m.NickName)
		i = encodeVarintApp(dAtA, i, uint64(len(m.NickName)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Scope) > 0 {
		i -= len(m.Scope)
		copy(dAtA[i:], m.Scope)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Scope)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.OpenId) > 0 {
		i -= len(m.OpenId)
		copy(dAtA[i:], m.OpenId)
		i = encodeVarintApp(dAtA, i, uint64(len(m.OpenId)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.RefreshToken) > 0 {
		i -= len(m.RefreshToken)
		copy(dAtA[i:], m.RefreshToken)
		i = encodeVarintApp(dAtA, i, uint64(len(m.RefreshToken)))
		i--
		dAtA[i] = 0x1a
	}
	if m.ExpiresIn != 0 {
		i = encodeVarintApp(dAtA, i, uint64(m.ExpiresIn))
		i--
		dAtA[i] = 0x10
	}
	if len(m.AccessToken) > 0 {
		i -= len(m.AccessToken)
		copy(dAtA[i:], m.AccessToken)
		i = encodeVarintApp(dAtA, i, uint64(len(m.AccessToken)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UserRefreshRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserRefreshRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserRefreshRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.VersionCode) > 0 {
		i -= len(m.VersionCode)
		copy(dAtA[i:], m.VersionCode)
		i = encodeVarintApp(dAtA, i, uint64(len(m.VersionCode)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Channel) > 0 {
		i -= len(m.Channel)
		copy(dAtA[i:], m.Channel)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Channel)))
		i--
		dAtA[i] = 0x2a
	}
	if m.Device != nil {
		{
			size, err := m.Device.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApp(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	return len(dAtA) - i, nil
}

func (m *UserUnbindRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserUnbindRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserUnbindRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Taobao {
		i--
		if m.Taobao {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Wechat {
		i--
		if m.Wechat {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if m.Mobile {
		i--
		if m.Mobile {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *UserLoginRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserLoginRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserLoginRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ThirdPartyId) > 0 {
		i -= len(m.ThirdPartyId)
		copy(dAtA[i:], m.ThirdPartyId)
		i = encodeVarintApp(dAtA, i, uint64(len(m.ThirdPartyId)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.PackageName) > 0 {
		i -= len(m.PackageName)
		copy(dAtA[i:], m.PackageName)
		i = encodeVarintApp(dAtA, i, uint64(len(m.PackageName)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.VersionCode) > 0 {
		i -= len(m.VersionCode)
		copy(dAtA[i:], m.VersionCode)
		i = encodeVarintApp(dAtA, i, uint64(len(m.VersionCode)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Channel) > 0 {
		i -= len(m.Channel)
		copy(dAtA[i:], m.Channel)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Channel)))
		i--
		dAtA[i] = 0x2a
	}
	if m.Device != nil {
		{
			size, err := m.Device.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApp(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.Wechat) > 0 {
		i -= len(m.Wechat)
		copy(dAtA[i:], m.Wechat)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Wechat)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Code) > 0 {
		i -= len(m.Code)
		copy(dAtA[i:], m.Code)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Code)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Mobile) > 0 {
		i -= len(m.Mobile)
		copy(dAtA[i:], m.Mobile)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Mobile)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Device) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Device) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Device) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Smid) > 0 {
		i -= len(m.Smid)
		copy(dAtA[i:], m.Smid)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Smid)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.Oaid) > 0 {
		i -= len(m.Oaid)
		copy(dAtA[i:], m.Oaid)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Oaid)))
		i--
		dAtA[i] = 0x3a
	}
	if m.Os != 0 {
		i = encodeVarintApp(dAtA, i, uint64(m.Os))
		i--
		dAtA[i] = 0x30
	}
	if len(m.Mac) > 0 {
		i -= len(m.Mac)
		copy(dAtA[i:], m.Mac)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Mac)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Suuid) > 0 {
		i -= len(m.Suuid)
		copy(dAtA[i:], m.Suuid)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Suuid)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.AndroidId) > 0 {
		i -= len(m.AndroidId)
		copy(dAtA[i:], m.AndroidId)
		i = encodeVarintApp(dAtA, i, uint64(len(m.AndroidId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Idfa) > 0 {
		i -= len(m.Idfa)
		copy(dAtA[i:], m.Idfa)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Idfa)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Imei) > 0 {
		i -= len(m.Imei)
		copy(dAtA[i:], m.Imei)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Imei)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UserInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.CreatedAt) > 0 {
		i -= len(m.CreatedAt)
		copy(dAtA[i:], m.CreatedAt)
		i = encodeVarintApp(dAtA, i, uint64(len(m.CreatedAt)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	if m.IsInvited {
		i--
		if m.IsInvited {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x78
	}
	if m.IsDeleted {
		i--
		if m.IsDeleted {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x70
	}
	if len(m.InviteCode) > 0 {
		i -= len(m.InviteCode)
		copy(dAtA[i:], m.InviteCode)
		i = encodeVarintApp(dAtA, i, uint64(len(m.InviteCode)))
		i--
		dAtA[i] = 0x6a
	}
	if len(m.Mobile) > 0 {
		i -= len(m.Mobile)
		copy(dAtA[i:], m.Mobile)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Mobile)))
		i--
		dAtA[i] = 0x62
	}
	if m.TaobaoExtra != nil {
		{
			size, err := m.TaobaoExtra.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApp(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x5a
	}
	if m.WechatExtra != nil {
		{
			size, err := m.WechatExtra.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApp(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x52
	}
	if m.IsNew {
		i--
		if m.IsNew {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x48
	}
	if len(m.ThirdPartyId) > 0 {
		i -= len(m.ThirdPartyId)
		copy(dAtA[i:], m.ThirdPartyId)
		i = encodeVarintApp(dAtA, i, uint64(len(m.ThirdPartyId)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.Token) > 0 {
		i -= len(m.Token)
		copy(dAtA[i:], m.Token)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Token)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Birthday) > 0 {
		i -= len(m.Birthday)
		copy(dAtA[i:], m.Birthday)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Birthday)))
		i--
		dAtA[i] = 0x32
	}
	if m.Gender != 0 {
		i = encodeVarintApp(dAtA, i, uint64(m.Gender))
		i--
		dAtA[i] = 0x28
	}
	if len(m.HeadImg) > 0 {
		i -= len(m.HeadImg)
		copy(dAtA[i:], m.HeadImg)
		i = encodeVarintApp(dAtA, i, uint64(len(m.HeadImg)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Wechat) > 0 {
		i -= len(m.Wechat)
		copy(dAtA[i:], m.Wechat)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Wechat)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.UserName) > 0 {
		i -= len(m.UserName)
		copy(dAtA[i:], m.UserName)
		i = encodeVarintApp(dAtA, i, uint64(len(m.UserName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintApp(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *UserInfoDetail) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserInfoDetail) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserInfoDetail) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Cid) > 0 {
		i -= len(m.Cid)
		copy(dAtA[i:], m.Cid)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Cid)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xfa
	}
	if len(m.Aid) > 0 {
		i -= len(m.Aid)
		copy(dAtA[i:], m.Aid)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Aid)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xf2
	}
	if len(m.CampaignId) > 0 {
		i -= len(m.CampaignId)
		copy(dAtA[i:], m.CampaignId)
		i = encodeVarintApp(dAtA, i, uint64(len(m.CampaignId)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xea
	}
	if m.Os != 0 {
		i = encodeVarintApp(dAtA, i, uint64(m.Os))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xe0
	}
	if len(m.AndroidId) > 0 {
		i -= len(m.AndroidId)
		copy(dAtA[i:], m.AndroidId)
		i = encodeVarintApp(dAtA, i, uint64(len(m.AndroidId)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xda
	}
	if len(m.Mac) > 0 {
		i -= len(m.Mac)
		copy(dAtA[i:], m.Mac)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Mac)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xd2
	}
	if len(m.Ip) > 0 {
		i -= len(m.Ip)
		copy(dAtA[i:], m.Ip)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Ip)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xca
	}
	if len(m.Idfa) > 0 {
		i -= len(m.Idfa)
		copy(dAtA[i:], m.Idfa)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Idfa)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xc2
	}
	if len(m.Imei) > 0 {
		i -= len(m.Imei)
		copy(dAtA[i:], m.Imei)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Imei)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xba
	}
	if len(m.Oaid) > 0 {
		i -= len(m.Oaid)
		copy(dAtA[i:], m.Oaid)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Oaid)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xb2
	}
	if len(m.Smid) > 0 {
		i -= len(m.Smid)
		copy(dAtA[i:], m.Smid)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Smid)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xaa
	}
	if len(m.PackageName) > 0 {
		i -= len(m.PackageName)
		copy(dAtA[i:], m.PackageName)
		i = encodeVarintApp(dAtA, i, uint64(len(m.PackageName)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa2
	}
	if len(m.VersionCode) > 0 {
		i -= len(m.VersionCode)
		copy(dAtA[i:], m.VersionCode)
		i = encodeVarintApp(dAtA, i, uint64(len(m.VersionCode)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x9a
	}
	if len(m.Channel) > 0 {
		i -= len(m.Channel)
		copy(dAtA[i:], m.Channel)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Channel)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x92
	}
	if len(m.CreatedAt) > 0 {
		i -= len(m.CreatedAt)
		copy(dAtA[i:], m.CreatedAt)
		i = encodeVarintApp(dAtA, i, uint64(len(m.CreatedAt)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	if len(m.Suuid) > 0 {
		i -= len(m.Suuid)
		copy(dAtA[i:], m.Suuid)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Suuid)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x82
	}
	if m.IsInvited {
		i--
		if m.IsInvited {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x78
	}
	if m.IsDeleted {
		i--
		if m.IsDeleted {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x70
	}
	if len(m.InviteCode) > 0 {
		i -= len(m.InviteCode)
		copy(dAtA[i:], m.InviteCode)
		i = encodeVarintApp(dAtA, i, uint64(len(m.InviteCode)))
		i--
		dAtA[i] = 0x6a
	}
	if len(m.Mobile) > 0 {
		i -= len(m.Mobile)
		copy(dAtA[i:], m.Mobile)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Mobile)))
		i--
		dAtA[i] = 0x62
	}
	if m.TaobaoExtra != nil {
		{
			size, err := m.TaobaoExtra.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApp(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x5a
	}
	if m.WechatExtra != nil {
		{
			size, err := m.WechatExtra.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApp(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x52
	}
	if m.IsNew {
		i--
		if m.IsNew {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x48
	}
	if len(m.ThirdPartyId) > 0 {
		i -= len(m.ThirdPartyId)
		copy(dAtA[i:], m.ThirdPartyId)
		i = encodeVarintApp(dAtA, i, uint64(len(m.ThirdPartyId)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.Token) > 0 {
		i -= len(m.Token)
		copy(dAtA[i:], m.Token)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Token)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Birthday) > 0 {
		i -= len(m.Birthday)
		copy(dAtA[i:], m.Birthday)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Birthday)))
		i--
		dAtA[i] = 0x32
	}
	if m.Gender != 0 {
		i = encodeVarintApp(dAtA, i, uint64(m.Gender))
		i--
		dAtA[i] = 0x28
	}
	if len(m.HeadImg) > 0 {
		i -= len(m.HeadImg)
		copy(dAtA[i:], m.HeadImg)
		i = encodeVarintApp(dAtA, i, uint64(len(m.HeadImg)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Wechat) > 0 {
		i -= len(m.Wechat)
		copy(dAtA[i:], m.Wechat)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Wechat)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.UserName) > 0 {
		i -= len(m.UserName)
		copy(dAtA[i:], m.UserName)
		i = encodeVarintApp(dAtA, i, uint64(len(m.UserName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintApp(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *UserInfoReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserInfoReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserInfoReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Msg) > 0 {
		i -= len(m.Msg)
		copy(dAtA[i:], m.Msg)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Msg)))
		i--
		dAtA[i] = 0x22
	}
	if m.Data != nil {
		{
			size, err := m.Data.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApp(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x12
	}
	if m.Code != 0 {
		i = encodeVarintApp(dAtA, i, uint64(m.Code))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *UserInfoBatchReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserInfoBatchReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserInfoBatchReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Count != 0 {
		i = encodeVarintApp(dAtA, i, uint64(m.Count))
		i--
		dAtA[i] = 0x28
	}
	if len(m.Msg) > 0 {
		i -= len(m.Msg)
		copy(dAtA[i:], m.Msg)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Msg)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Data) > 0 {
		for iNdEx := len(m.Data) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Data[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintApp(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.Code != 0 {
		i = encodeVarintApp(dAtA, i, uint64(m.Code))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetCodeRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetCodeRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetCodeRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.PackageName) > 0 {
		i -= len(m.PackageName)
		copy(dAtA[i:], m.PackageName)
		i = encodeVarintApp(dAtA, i, uint64(len(m.PackageName)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Mobile) > 0 {
		i -= len(m.Mobile)
		copy(dAtA[i:], m.Mobile)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Mobile)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UserInfoBatchRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserInfoBatchRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserInfoBatchRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Page != 0 {
		i = encodeVarintApp(dAtA, i, uint64(m.Page))
		i--
		dAtA[i] = 0x50
	}
	if m.PerPage != 0 {
		i = encodeVarintApp(dAtA, i, uint64(m.PerPage))
		i--
		dAtA[i] = 0x48
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.Mobile) > 0 {
		i -= len(m.Mobile)
		copy(dAtA[i:], m.Mobile)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Mobile)))
		i--
		dAtA[i] = 0x3a
	}
	if m.Before != 0 {
		i = encodeVarintApp(dAtA, i, uint64(m.Before))
		i--
		dAtA[i] = 0x30
	}
	if m.After != 0 {
		i = encodeVarintApp(dAtA, i, uint64(m.After))
		i--
		dAtA[i] = 0x28
	}
	if len(m.PackageName) > 0 {
		i -= len(m.PackageName)
		copy(dAtA[i:], m.PackageName)
		i = encodeVarintApp(dAtA, i, uint64(len(m.PackageName)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.InviteCode) > 0 {
		for iNdEx := len(m.InviteCode) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.InviteCode[iNdEx])
			copy(dAtA[i:], m.InviteCode[iNdEx])
			i = encodeVarintApp(dAtA, i, uint64(len(m.InviteCode[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Id) > 0 {
		dAtA11 := make([]byte, len(m.Id)*10)
		var j10 int
		for _, num := range m.Id {
			for num >= 1<<7 {
				dAtA11[j10] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j10++
			}
			dAtA11[j10] = uint8(num)
			j10++
		}
		i -= j10
		copy(dAtA[i:], dAtA11[:j10])
		i = encodeVarintApp(dAtA, i, uint64(j10))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UserInfoRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserInfoRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserInfoRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Taobao {
		i--
		if m.Taobao {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Wechat {
		i--
		if m.Wechat {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if m.Id != 0 {
		i = encodeVarintApp(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *UserInfoUpdateRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserInfoUpdateRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserInfoUpdateRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ThirdPartyId) > 0 {
		i -= len(m.ThirdPartyId)
		copy(dAtA[i:], m.ThirdPartyId)
		i = encodeVarintApp(dAtA, i, uint64(len(m.ThirdPartyId)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Birthday) > 0 {
		i -= len(m.Birthday)
		copy(dAtA[i:], m.Birthday)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Birthday)))
		i--
		dAtA[i] = 0x32
	}
	if m.Gender != 0 {
		i = encodeVarintApp(dAtA, i, uint64(m.Gender))
		i--
		dAtA[i] = 0x28
	}
	if len(m.HeadImg) > 0 {
		i -= len(m.HeadImg)
		copy(dAtA[i:], m.HeadImg)
		i = encodeVarintApp(dAtA, i, uint64(len(m.HeadImg)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.UserName) > 0 {
		i -= len(m.UserName)
		copy(dAtA[i:], m.UserName)
		i = encodeVarintApp(dAtA, i, uint64(len(m.UserName)))
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}

func (m *EmptyRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EmptyRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EmptyRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *GenericReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GenericReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GenericReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Msg) > 0 {
		i -= len(m.Msg)
		copy(dAtA[i:], m.Msg)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Msg)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x12
	}
	if m.Code != 0 {
		i = encodeVarintApp(dAtA, i, uint64(m.Code))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *UserSoftDeleteRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserSoftDeleteRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserSoftDeleteRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Id != 0 {
		i = encodeVarintApp(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *UserBindAdRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserBindAdRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserBindAdRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Aid) > 0 {
		i -= len(m.Aid)
		copy(dAtA[i:], m.Aid)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Aid)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Cid) > 0 {
		i -= len(m.Cid)
		copy(dAtA[i:], m.Cid)
		i = encodeVarintApp(dAtA, i, uint64(len(m.Cid)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.CampaignId) > 0 {
		i -= len(m.CampaignId)
		copy(dAtA[i:], m.CampaignId)
		i = encodeVarintApp(dAtA, i, uint64(len(m.CampaignId)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintApp(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintApp(dAtA []byte, offset int, v uint64) int {
	offset -= sovApp(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *UserBindRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Mobile)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.Code)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.Wechat)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.OpenId)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	if m.TaobaoExtra != nil {
		l = m.TaobaoExtra.Size()
		n += 1 + l + sovApp(uint64(l))
	}
	if m.WechatExtra != nil {
		l = m.WechatExtra.Size()
		n += 1 + l + sovApp(uint64(l))
	}
	if m.MergeInfo {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TaobaoExtra) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.UserId)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.OpenSid)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.TopAccessToken)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.AvatarUrl)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.HavanaSsoToken)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.Nick)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.OpenId)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.TopAuthCode)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.TopExpireTime)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *WechatExtra) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AccessToken)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	if m.ExpiresIn != 0 {
		n += 1 + sovApp(uint64(m.ExpiresIn))
	}
	l = len(m.RefreshToken)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.OpenId)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.Scope)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.NickName)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	if m.Sex != 0 {
		n += 1 + sovApp(uint64(m.Sex))
	}
	l = len(m.Province)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.City)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.Country)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.Headimgurl)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	if len(m.Privilege) > 0 {
		for _, s := range m.Privilege {
			l = len(s)
			n += 1 + l + sovApp(uint64(l))
		}
	}
	l = len(m.Unionid)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UserRefreshRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Device != nil {
		l = m.Device.Size()
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.Channel)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.VersionCode)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UserUnbindRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Mobile {
		n += 2
	}
	if m.Wechat {
		n += 2
	}
	if m.Taobao {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UserLoginRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Mobile)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.Code)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.Wechat)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	if m.Device != nil {
		l = m.Device.Size()
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.Channel)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.VersionCode)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.PackageName)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.ThirdPartyId)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Device) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Imei)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.Idfa)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.AndroidId)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.Suuid)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.Mac)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	if m.Os != 0 {
		n += 1 + sovApp(uint64(m.Os))
	}
	l = len(m.Oaid)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.Smid)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UserInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovApp(uint64(m.Id))
	}
	l = len(m.UserName)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.Wechat)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.HeadImg)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	if m.Gender != 0 {
		n += 1 + sovApp(uint64(m.Gender))
	}
	l = len(m.Birthday)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.Token)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.ThirdPartyId)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	if m.IsNew {
		n += 2
	}
	if m.WechatExtra != nil {
		l = m.WechatExtra.Size()
		n += 1 + l + sovApp(uint64(l))
	}
	if m.TaobaoExtra != nil {
		l = m.TaobaoExtra.Size()
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.Mobile)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.InviteCode)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	if m.IsDeleted {
		n += 2
	}
	if m.IsInvited {
		n += 2
	}
	l = len(m.CreatedAt)
	if l > 0 {
		n += 2 + l + sovApp(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UserInfoDetail) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovApp(uint64(m.Id))
	}
	l = len(m.UserName)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.Wechat)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.HeadImg)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	if m.Gender != 0 {
		n += 1 + sovApp(uint64(m.Gender))
	}
	l = len(m.Birthday)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.Token)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.ThirdPartyId)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	if m.IsNew {
		n += 2
	}
	if m.WechatExtra != nil {
		l = m.WechatExtra.Size()
		n += 1 + l + sovApp(uint64(l))
	}
	if m.TaobaoExtra != nil {
		l = m.TaobaoExtra.Size()
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.Mobile)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.InviteCode)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	if m.IsDeleted {
		n += 2
	}
	if m.IsInvited {
		n += 2
	}
	l = len(m.Suuid)
	if l > 0 {
		n += 2 + l + sovApp(uint64(l))
	}
	l = len(m.CreatedAt)
	if l > 0 {
		n += 2 + l + sovApp(uint64(l))
	}
	l = len(m.Channel)
	if l > 0 {
		n += 2 + l + sovApp(uint64(l))
	}
	l = len(m.VersionCode)
	if l > 0 {
		n += 2 + l + sovApp(uint64(l))
	}
	l = len(m.PackageName)
	if l > 0 {
		n += 2 + l + sovApp(uint64(l))
	}
	l = len(m.Smid)
	if l > 0 {
		n += 2 + l + sovApp(uint64(l))
	}
	l = len(m.Oaid)
	if l > 0 {
		n += 2 + l + sovApp(uint64(l))
	}
	l = len(m.Imei)
	if l > 0 {
		n += 2 + l + sovApp(uint64(l))
	}
	l = len(m.Idfa)
	if l > 0 {
		n += 2 + l + sovApp(uint64(l))
	}
	l = len(m.Ip)
	if l > 0 {
		n += 2 + l + sovApp(uint64(l))
	}
	l = len(m.Mac)
	if l > 0 {
		n += 2 + l + sovApp(uint64(l))
	}
	l = len(m.AndroidId)
	if l > 0 {
		n += 2 + l + sovApp(uint64(l))
	}
	if m.Os != 0 {
		n += 2 + sovApp(uint64(m.Os))
	}
	l = len(m.CampaignId)
	if l > 0 {
		n += 2 + l + sovApp(uint64(l))
	}
	l = len(m.Aid)
	if l > 0 {
		n += 2 + l + sovApp(uint64(l))
	}
	l = len(m.Cid)
	if l > 0 {
		n += 2 + l + sovApp(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UserInfoReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Code != 0 {
		n += 1 + sovApp(uint64(m.Code))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.Msg)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UserInfoBatchReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Code != 0 {
		n += 1 + sovApp(uint64(m.Code))
	}
	if len(m.Data) > 0 {
		for _, e := range m.Data {
			l = e.Size()
			n += 1 + l + sovApp(uint64(l))
		}
	}
	l = len(m.Msg)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	if m.Count != 0 {
		n += 1 + sovApp(uint64(m.Count))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetCodeRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Mobile)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.PackageName)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UserInfoBatchRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Id) > 0 {
		l = 0
		for _, e := range m.Id {
			l += sovApp(uint64(e))
		}
		n += 1 + sovApp(uint64(l)) + l
	}
	if len(m.InviteCode) > 0 {
		for _, s := range m.InviteCode {
			l = len(s)
			n += 1 + l + sovApp(uint64(l))
		}
	}
	l = len(m.PackageName)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	if m.After != 0 {
		n += 1 + sovApp(uint64(m.After))
	}
	if m.Before != 0 {
		n += 1 + sovApp(uint64(m.Before))
	}
	l = len(m.Mobile)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	if m.PerPage != 0 {
		n += 1 + sovApp(uint64(m.PerPage))
	}
	if m.Page != 0 {
		n += 1 + sovApp(uint64(m.Page))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UserInfoRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovApp(uint64(m.Id))
	}
	if m.Wechat {
		n += 2
	}
	if m.Taobao {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UserInfoUpdateRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.UserName)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.HeadImg)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	if m.Gender != 0 {
		n += 1 + sovApp(uint64(m.Gender))
	}
	l = len(m.Birthday)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.ThirdPartyId)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *EmptyRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GenericReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Code != 0 {
		n += 1 + sovApp(uint64(m.Code))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.Msg)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UserSoftDeleteRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovApp(uint64(m.Id))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UserBindAdRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovApp(uint64(m.Id))
	}
	l = len(m.CampaignId)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.Cid)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	l = len(m.Aid)
	if l > 0 {
		n += 1 + l + sovApp(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovApp(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozApp(x uint64) (n int) {
	return sovApp(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *UserBindRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApp
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserBindRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserBindRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mobile", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Mobile = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Code = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Wechat", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Wechat = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OpenId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OpenId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaobaoExtra", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TaobaoExtra == nil {
				m.TaobaoExtra = &TaobaoExtra{}
			}
			if err := m.TaobaoExtra.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WechatExtra", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.WechatExtra == nil {
				m.WechatExtra = &WechatExtra{}
			}
			if err := m.WechatExtra.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MergeInfo", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MergeInfo = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipApp(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApp
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApp
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TaobaoExtra) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApp
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TaobaoExtra: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TaobaoExtra: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OpenSid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OpenSid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopAccessToken", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TopAccessToken = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AvatarUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AvatarUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HavanaSsoToken", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HavanaSsoToken = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Nick", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Nick = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OpenId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OpenId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopAuthCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TopAuthCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopExpireTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TopExpireTime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApp(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApp
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApp
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WechatExtra) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApp
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WechatExtra: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WechatExtra: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccessToken", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AccessToken = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpiresIn", wireType)
			}
			m.ExpiresIn = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ExpiresIn |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RefreshToken", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RefreshToken = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OpenId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OpenId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Scope", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Scope = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NickName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NickName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sex", wireType)
			}
			m.Sex = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Sex |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Province", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Province = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field City", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.City = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Country", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Country = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Headimgurl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Headimgurl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Privilege", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Privilege = append(m.Privilege, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Unionid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Unionid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApp(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApp
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApp
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserRefreshRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApp
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserRefreshRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserRefreshRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Device", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Device == nil {
				m.Device = &Device{}
			}
			if err := m.Device.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Channel = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VersionCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VersionCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApp(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApp
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApp
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserUnbindRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApp
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserUnbindRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserUnbindRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mobile", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Mobile = bool(v != 0)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Wechat", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Wechat = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Taobao", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Taobao = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipApp(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApp
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApp
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserLoginRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApp
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserLoginRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserLoginRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mobile", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Mobile = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Code = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Wechat", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Wechat = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Device", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Device == nil {
				m.Device = &Device{}
			}
			if err := m.Device.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Channel = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VersionCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VersionCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PackageName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PackageName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ThirdPartyId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ThirdPartyId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApp(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApp
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApp
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Device) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApp
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Device: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Device: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Imei", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Imei = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Idfa", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Idfa = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AndroidId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AndroidId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Suuid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Suuid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mac", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Mac = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Os", wireType)
			}
			m.Os = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Os |= Device_OS(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Oaid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Oaid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Smid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Smid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApp(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApp
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApp
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApp
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Wechat", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Wechat = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HeadImg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HeadImg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Gender", wireType)
			}
			m.Gender = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Gender |= Gender(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Birthday", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Birthday = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ThirdPartyId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ThirdPartyId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsNew", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsNew = bool(v != 0)
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WechatExtra", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.WechatExtra == nil {
				m.WechatExtra = &WechatExtra{}
			}
			if err := m.WechatExtra.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaobaoExtra", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TaobaoExtra == nil {
				m.TaobaoExtra = &TaobaoExtra{}
			}
			if err := m.TaobaoExtra.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mobile", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Mobile = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InviteCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InviteCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsDeleted", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsDeleted = bool(v != 0)
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsInvited", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsInvited = bool(v != 0)
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatedAt = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApp(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApp
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApp
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserInfoDetail) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApp
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserInfoDetail: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserInfoDetail: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Wechat", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Wechat = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HeadImg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HeadImg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Gender", wireType)
			}
			m.Gender = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Gender |= Gender(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Birthday", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Birthday = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ThirdPartyId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ThirdPartyId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsNew", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsNew = bool(v != 0)
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WechatExtra", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.WechatExtra == nil {
				m.WechatExtra = &WechatExtra{}
			}
			if err := m.WechatExtra.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaobaoExtra", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TaobaoExtra == nil {
				m.TaobaoExtra = &TaobaoExtra{}
			}
			if err := m.TaobaoExtra.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mobile", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Mobile = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InviteCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InviteCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsDeleted", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsDeleted = bool(v != 0)
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsInvited", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsInvited = bool(v != 0)
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Suuid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Suuid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatedAt = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Channel = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 19:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VersionCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VersionCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PackageName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PackageName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Smid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Smid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Oaid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Oaid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 23:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Imei", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Imei = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 24:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Idfa", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Idfa = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 25:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ip", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ip = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 26:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mac", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Mac = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 27:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AndroidId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AndroidId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 28:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Os", wireType)
			}
			m.Os = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Os |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 29:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampaignId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CampaignId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 30:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Aid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Aid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 31:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApp(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApp
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApp
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserInfoReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApp
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserInfoReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserInfoReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			m.Code = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Code |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &UserInfo{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApp(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApp
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApp
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserInfoBatchReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApp
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserInfoBatchReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserInfoBatchReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			m.Code = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Code |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data, &UserInfoDetail{})
			if err := m.Data[len(m.Data)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Count", wireType)
			}
			m.Count = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Count |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApp(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApp
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApp
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetCodeRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApp
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetCodeRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetCodeRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mobile", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Mobile = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PackageName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PackageName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApp(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApp
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApp
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserInfoBatchRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApp
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserInfoBatchRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserInfoBatchRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowApp
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Id = append(m.Id, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowApp
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthApp
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthApp
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Id) == 0 {
					m.Id = make([]uint64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowApp
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Id = append(m.Id, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InviteCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InviteCode = append(m.InviteCode, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PackageName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PackageName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field After", wireType)
			}
			m.After = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.After |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Before", wireType)
			}
			m.Before = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Before |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mobile", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Mobile = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PerPage", wireType)
			}
			m.PerPage = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PerPage |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApp(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApp
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApp
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserInfoRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApp
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserInfoRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserInfoRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Wechat", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Wechat = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Taobao", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Taobao = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipApp(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApp
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApp
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserInfoUpdateRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApp
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserInfoUpdateRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserInfoUpdateRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HeadImg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HeadImg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Gender", wireType)
			}
			m.Gender = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Gender |= Gender(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Birthday", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Birthday = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ThirdPartyId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ThirdPartyId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApp(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApp
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApp
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EmptyRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApp
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EmptyRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EmptyRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipApp(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApp
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApp
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GenericReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApp
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GenericReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GenericReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			m.Code = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Code |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApp(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApp
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApp
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserSoftDeleteRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApp
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserSoftDeleteRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserSoftDeleteRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApp(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApp
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApp
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserBindAdRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApp
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserBindAdRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserBindAdRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampaignId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CampaignId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Aid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApp
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApp
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApp
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Aid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApp(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApp
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApp
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipApp(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowApp
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApp
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApp
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthApp
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupApp
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthApp
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthApp        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowApp          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupApp = fmt.Errorf("proto: unexpected end of group")
)
