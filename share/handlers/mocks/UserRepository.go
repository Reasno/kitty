// Code generated by mockery v2.3.0. DO NOT EDIT.

package mocks

import (
	context "context"

	entity "glab.tagtic.cn/ad_gains/kitty/app/entity"

	mock "github.com/stretchr/testify/mock"
)

// UserRepository is an autogenerated mock type for the UserRepository type
type UserRepository struct {
	mock.Mock
}

// Get provides a mock function with given fields: ctx, id
func (_m *UserRepository) Get(ctx context.Context, id uint) (*entity.User, error) {
	ret := _m.Called(ctx, id)

	var r0 *entity.User
	if rf, ok := ret.Get(0).(func(context.Context, uint) *entity.User); ok {
		r0 = rf(ctx, id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*entity.User)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, uint) error); ok {
		r1 = rf(ctx, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateCallback provides a mock function with given fields: ctx, id, f
func (_m *UserRepository) UpdateCallback(ctx context.Context, id uint, f func(*entity.User) error) error {
	ret := _m.Called(ctx, id, f)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, uint, func(*entity.User) error) error); ok {
		r0 = rf(ctx, id, f)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
