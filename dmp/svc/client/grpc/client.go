// Code generated by truss. DO NOT EDIT.
// Rerunning truss will overwrite this file.
// Version: e12fd89529
// Version Date: 2021-03-04T06:59:01Z

// Package grpc provides a gRPC client for the Dmp service.
package grpc

import (
	"context"
	"google.golang.org/grpc"

	"github.com/go-kit/kit/endpoint"
	grpctransport "github.com/go-kit/kit/transport/grpc"

	// This Service
	"glab.tagtic.cn/ad_gains/kitty/dmp/svc"
	pb "glab.tagtic.cn/ad_gains/kitty/proto"
)

// New returns an service backed by a gRPC client connection. It is the
// responsibility of the caller to dial, and later close, the connection.
func New(conn *grpc.ClientConn, options ...grpctransport.ClientOption) (svc.Endpoints, error) {
	var usermoreEndpoint endpoint.Endpoint
	{
		usermoreEndpoint = grpctransport.NewClient(
			conn,
			"pb.Dmp",
			"UserMore",
			EncodeGRPCUserMoreRequest,
			DecodeGRPCUserMoreResponse,
			pb.DmpResp{},
			options...,
		).Endpoint()
	}

	return svc.Endpoints{
		UserMoreEndpoint: usermoreEndpoint,
	}, nil
}

// GRPC Client Decode

// DecodeGRPCUserMoreResponse is a transport/grpc.DecodeResponseFunc that converts a
// gRPC usermore reply to a user-domain usermore response. Primarily useful in a client.
func DecodeGRPCUserMoreResponse(_ context.Context, grpcReply interface{}) (interface{}, error) {
	reply := grpcReply.(*pb.DmpResp)
	return reply, nil
}

// GRPC Client Encode

// EncodeGRPCUserMoreRequest is a transport/grpc.EncodeRequestFunc that converts a
// user-domain usermore request to a gRPC usermore request. Primarily useful in a client.
func EncodeGRPCUserMoreRequest(_ context.Context, request interface{}) (interface{}, error) {
	req := request.(*pb.DmpReq)
	return req, nil
}
